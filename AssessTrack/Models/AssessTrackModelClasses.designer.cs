#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AssessTrack.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CMSData")]
	public partial class AssessTrackModelClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAnswerKey(AnswerKey instance);
    partial void UpdateAnswerKey(AnswerKey instance);
    partial void DeleteAnswerKey(AnswerKey instance);
    partial void InsertAnswer(Answer instance);
    partial void UpdateAnswer(Answer instance);
    partial void DeleteAnswer(Answer instance);
    partial void InsertAssessmentType(AssessmentType instance);
    partial void UpdateAssessmentType(AssessmentType instance);
    partial void DeleteAssessmentType(AssessmentType instance);
    partial void InsertCourse(Course instance);
    partial void UpdateCourse(Course instance);
    partial void DeleteCourse(Course instance);
    partial void InsertCourseTermFile(CourseTermFile instance);
    partial void UpdateCourseTermFile(CourseTermFile instance);
    partial void DeleteCourseTermFile(CourseTermFile instance);
    partial void InsertCourseTermMessage(CourseTermMessage instance);
    partial void UpdateCourseTermMessage(CourseTermMessage instance);
    partial void DeleteCourseTermMessage(CourseTermMessage instance);
    partial void InsertCourseTerm(CourseTerm instance);
    partial void UpdateCourseTerm(CourseTerm instance);
    partial void DeleteCourseTerm(CourseTerm instance);
    partial void InsertFile(File instance);
    partial void UpdateFile(File instance);
    partial void DeleteFile(File instance);
    partial void InsertProgramOutcome(ProgramOutcome instance);
    partial void UpdateProgramOutcome(ProgramOutcome instance);
    partial void DeleteProgramOutcome(ProgramOutcome instance);
    partial void InsertInvitation(Invitation instance);
    partial void UpdateInvitation(Invitation instance);
    partial void DeleteInvitation(Invitation instance);
    partial void InsertProfile(Profile instance);
    partial void UpdateProfile(Profile instance);
    partial void DeleteProfile(Profile instance);
    partial void InsertQuestion(Question instance);
    partial void UpdateQuestion(Question instance);
    partial void DeleteQuestion(Question instance);
    partial void InsertResponse(Response instance);
    partial void UpdateResponse(Response instance);
    partial void DeleteResponse(Response instance);
    partial void InsertSiteMember(SiteMember instance);
    partial void UpdateSiteMember(SiteMember instance);
    partial void DeleteSiteMember(SiteMember instance);
    partial void InsertSite(Site instance);
    partial void UpdateSite(Site instance);
    partial void DeleteSite(Site instance);
    partial void InsertSubmissionException(SubmissionException instance);
    partial void UpdateSubmissionException(SubmissionException instance);
    partial void DeleteSubmissionException(SubmissionException instance);
    partial void InsertSubmissionRecord(SubmissionRecord instance);
    partial void UpdateSubmissionRecord(SubmissionRecord instance);
    partial void DeleteSubmissionRecord(SubmissionRecord instance);
    partial void InsertTagProgramOutcome(TagProgramOutcome instance);
    partial void UpdateTagProgramOutcome(TagProgramOutcome instance);
    partial void DeleteTagProgramOutcome(TagProgramOutcome instance);
    partial void InsertTag(Tag instance);
    partial void UpdateTag(Tag instance);
    partial void DeleteTag(Tag instance);
    partial void InsertTerm(Term instance);
    partial void UpdateTerm(Term instance);
    partial void DeleteTerm(Term instance);
    partial void InsertCourseTermMember(CourseTermMember instance);
    partial void UpdateCourseTermMember(CourseTermMember instance);
    partial void DeleteCourseTermMember(CourseTermMember instance);
    partial void InsertAssessment(Assessment instance);
    partial void UpdateAssessment(Assessment instance);
    partial void DeleteAssessment(Assessment instance);
    #endregion
		
		public AssessTrackModelClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ApplicationServices"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AssessTrackModelClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AssessTrackModelClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AssessTrackModelClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AssessTrackModelClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AnswerKey> AnswerKeys
		{
			get
			{
				return this.GetTable<AnswerKey>();
			}
		}
		
		public System.Data.Linq.Table<Answer> Answers
		{
			get
			{
				return this.GetTable<Answer>();
			}
		}
		
		public System.Data.Linq.Table<AnswerTag> AnswerTags
		{
			get
			{
				return this.GetTable<AnswerTag>();
			}
		}
		
		public System.Data.Linq.Table<AssessmentTag> AssessmentTags
		{
			get
			{
				return this.GetTable<AssessmentTag>();
			}
		}
		
		public System.Data.Linq.Table<AssessmentType> AssessmentTypes
		{
			get
			{
				return this.GetTable<AssessmentType>();
			}
		}
		
		public System.Data.Linq.Table<Course> Courses
		{
			get
			{
				return this.GetTable<Course>();
			}
		}
		
		public System.Data.Linq.Table<CourseTermFile> CourseTermFiles
		{
			get
			{
				return this.GetTable<CourseTermFile>();
			}
		}
		
		public System.Data.Linq.Table<CourseTermMessage> CourseTermMessages
		{
			get
			{
				return this.GetTable<CourseTermMessage>();
			}
		}
		
		public System.Data.Linq.Table<CourseTerm> CourseTerms
		{
			get
			{
				return this.GetTable<CourseTerm>();
			}
		}
		
		public System.Data.Linq.Table<File> Files
		{
			get
			{
				return this.GetTable<File>();
			}
		}
		
		public System.Data.Linq.Table<ProgramOutcome> ProgramOutcomes
		{
			get
			{
				return this.GetTable<ProgramOutcome>();
			}
		}
		
		public System.Data.Linq.Table<Invitation> Invitations
		{
			get
			{
				return this.GetTable<Invitation>();
			}
		}
		
		public System.Data.Linq.Table<Profile> Profiles
		{
			get
			{
				return this.GetTable<Profile>();
			}
		}
		
		public System.Data.Linq.Table<Question> Questions
		{
			get
			{
				return this.GetTable<Question>();
			}
		}
		
		public System.Data.Linq.Table<QuestionTag> QuestionTags
		{
			get
			{
				return this.GetTable<QuestionTag>();
			}
		}
		
		public System.Data.Linq.Table<Response> Responses
		{
			get
			{
				return this.GetTable<Response>();
			}
		}
		
		public System.Data.Linq.Table<SiteMember> SiteMembers
		{
			get
			{
				return this.GetTable<SiteMember>();
			}
		}
		
		public System.Data.Linq.Table<Site> Sites
		{
			get
			{
				return this.GetTable<Site>();
			}
		}
		
		public System.Data.Linq.Table<SubmissionException> SubmissionExceptions
		{
			get
			{
				return this.GetTable<SubmissionException>();
			}
		}
		
		public System.Data.Linq.Table<SubmissionRecord> SubmissionRecords
		{
			get
			{
				return this.GetTable<SubmissionRecord>();
			}
		}
		
		public System.Data.Linq.Table<TagProgramOutcome> TagProgramOutcomes
		{
			get
			{
				return this.GetTable<TagProgramOutcome>();
			}
		}
		
		public System.Data.Linq.Table<Tag> Tags
		{
			get
			{
				return this.GetTable<Tag>();
			}
		}
		
		public System.Data.Linq.Table<Term> Terms
		{
			get
			{
				return this.GetTable<Term>();
			}
		}
		
		public System.Data.Linq.Table<CourseTermMember> CourseTermMembers
		{
			get
			{
				return this.GetTable<CourseTermMember>();
			}
		}
		
		public System.Data.Linq.Table<Assessment> Assessments
		{
			get
			{
				return this.GetTable<Assessment>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_AddAnswerTag")]
		public int sp_AddAnswerTag([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> tagid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> answerid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tagid, answerid);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_AddAssessmentTag")]
		public int sp_AddAssessmentTag([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> tagid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> assessmentid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tagid, assessmentid);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_AddQuestionTag")]
		public int sp_AddQuestionTag([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> tagid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> questionid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tagid, questionid);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_DeleteTagFromAnswer")]
		public int sp_DeleteTagFromAnswer([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> tagid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> answerid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tagid, answerid);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_DeleteTagFromAssessment")]
		public int sp_DeleteTagFromAssessment([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> tagid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> assessmentid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tagid, assessmentid);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_DeleteTagFromQuestion")]
		public int sp_DeleteTagFromQuestion([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> tagid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> questionid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tagid, questionid);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_AddCourseAdmin", IsComposable=true)]
		public object sp_AddCourseAdmin([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> courseid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> userid)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), courseid, userid).ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnswerKeys")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AnswerKey : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AnswerKeyID;
		
		private System.Guid _AnswerID;
		
		private double _Weight;
		
		private string _Value;
		
		private EntityRef<Answer> _Answer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnswerKeyIDChanging(System.Guid value);
    partial void OnAnswerKeyIDChanged();
    partial void OnAnswerIDChanging(System.Guid value);
    partial void OnAnswerIDChanged();
    partial void OnWeightChanging(double value);
    partial void OnWeightChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public AnswerKey()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerKeyID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid AnswerKeyID
		{
			get
			{
				return this._AnswerKeyID;
			}
			set
			{
				if ((this._AnswerKeyID != value))
				{
					this.OnAnswerKeyIDChanging(value);
					this.SendPropertyChanging();
					this._AnswerKeyID = value;
					this.SendPropertyChanged("AnswerKeyID");
					this.OnAnswerKeyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid AnswerID
		{
			get
			{
				return this._AnswerID;
			}
			set
			{
				if ((this._AnswerID != value))
				{
					if (this._Answer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnswerIDChanging(value);
					this.SendPropertyChanging();
					this._AnswerID = value;
					this.SendPropertyChanged("AnswerID");
					this.OnAnswerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public double Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Answer_AnswerKey", Storage="_Answer", ThisKey="AnswerID", OtherKey="AnswerID", IsForeignKey=true)]
		public Answer Answer
		{
			get
			{
				return this._Answer.Entity;
			}
			set
			{
				Answer previousValue = this._Answer.Entity;
				if (((previousValue != value) 
							|| (this._Answer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Answer.Entity = null;
						previousValue.AnswerKeys.Remove(this);
					}
					this._Answer.Entity = value;
					if ((value != null))
					{
						value.AnswerKeys.Add(this);
						this._AnswerID = value.AnswerID;
					}
					else
					{
						this._AnswerID = default(System.Guid);
					}
					this.SendPropertyChanged("Answer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Answer = default(EntityRef<Answer>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Answers")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Answer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AnswerID;
		
		private double _Weight;
		
		private System.Guid _QuestionID;
		
		private System.Guid _AssessmentID;
		
		private string _AnswerKeyText;
		
		private string _Type;
		
		private string _Stdin;
		
		private string _Fstream;
		
		private EntitySet<AnswerKey> _AnswerKeys;
		
		private EntitySet<Response> _Responses;
		
		private EntityRef<Question> _Question;
		
		private EntityRef<Assessment> _Assessment;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnswerIDChanging(System.Guid value);
    partial void OnAnswerIDChanged();
    partial void OnWeightChanging(double value);
    partial void OnWeightChanged();
    partial void OnQuestionIDChanging(System.Guid value);
    partial void OnQuestionIDChanged();
    partial void OnAssessmentIDChanging(System.Guid value);
    partial void OnAssessmentIDChanged();
    partial void OnAnswerKeyTextChanging(string value);
    partial void OnAnswerKeyTextChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnStdinChanging(string value);
    partial void OnStdinChanged();
    partial void OnFstreamChanging(string value);
    partial void OnFstreamChanged();
    #endregion
		
		public Answer()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid AnswerID
		{
			get
			{
				return this._AnswerID;
			}
			set
			{
				if ((this._AnswerID != value))
				{
					this.OnAnswerIDChanging(value);
					this.SendPropertyChanging();
					this._AnswerID = value;
					this.SendPropertyChanged("AnswerID");
					this.OnAnswerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public double Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					if (this._Question.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssessmentID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Guid AssessmentID
		{
			get
			{
				return this._AssessmentID;
			}
			set
			{
				if ((this._AssessmentID != value))
				{
					if (this._Assessment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssessmentIDChanging(value);
					this.SendPropertyChanging();
					this._AssessmentID = value;
					this.SendPropertyChanged("AssessmentID");
					this.OnAssessmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerKeyText", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string AnswerKeyText
		{
			get
			{
				return this._AnswerKeyText;
			}
			set
			{
				if ((this._AnswerKeyText != value))
				{
					this.OnAnswerKeyTextChanging(value);
					this.SendPropertyChanging();
					this._AnswerKeyText = value;
					this.SendPropertyChanged("AnswerKeyText");
					this.OnAnswerKeyTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stdin", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Stdin
		{
			get
			{
				return this._Stdin;
			}
			set
			{
				if ((this._Stdin != value))
				{
					this.OnStdinChanging(value);
					this.SendPropertyChanging();
					this._Stdin = value;
					this.SendPropertyChanged("Stdin");
					this.OnStdinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fstream", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Fstream
		{
			get
			{
				return this._Fstream;
			}
			set
			{
				if ((this._Fstream != value))
				{
					this.OnFstreamChanging(value);
					this.SendPropertyChanging();
					this._Fstream = value;
					this.SendPropertyChanged("Fstream");
					this.OnFstreamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Answer_AnswerKey", Storage="_AnswerKeys", ThisKey="AnswerID", OtherKey="AnswerID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<AnswerKey> AnswerKeys
		{
			get
			{
				if ((this.serializing 
							&& (this._AnswerKeys.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AnswerKeys;
			}
			set
			{
				this._AnswerKeys.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Answer_Response", Storage="_Responses", ThisKey="AnswerID", OtherKey="AnswerID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<Response> Responses
		{
			get
			{
				if ((this.serializing 
							&& (this._Responses.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Responses;
			}
			set
			{
				this._Responses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_Answer", Storage="_Question", ThisKey="QuestionID", OtherKey="QuestionID", IsForeignKey=true)]
		public Question Question
		{
			get
			{
				return this._Question.Entity;
			}
			set
			{
				Question previousValue = this._Question.Entity;
				if (((previousValue != value) 
							|| (this._Question.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Question.Entity = null;
						previousValue.Answers.Remove(this);
					}
					this._Question.Entity = value;
					if ((value != null))
					{
						value.Answers.Add(this);
						this._QuestionID = value.QuestionID;
					}
					else
					{
						this._QuestionID = default(System.Guid);
					}
					this.SendPropertyChanged("Question");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Assessment_Answer", Storage="_Assessment", ThisKey="AssessmentID", OtherKey="AssessmentID", IsForeignKey=true)]
		public Assessment Assessment
		{
			get
			{
				return this._Assessment.Entity;
			}
			set
			{
				Assessment previousValue = this._Assessment.Entity;
				if (((previousValue != value) 
							|| (this._Assessment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Assessment.Entity = null;
						previousValue.Answers.Remove(this);
					}
					this._Assessment.Entity = value;
					if ((value != null))
					{
						value.Answers.Add(this);
						this._AssessmentID = value.AssessmentID;
					}
					else
					{
						this._AssessmentID = default(System.Guid);
					}
					this.SendPropertyChanged("Assessment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AnswerKeys(AnswerKey entity)
		{
			this.SendPropertyChanging();
			entity.Answer = this;
		}
		
		private void detach_AnswerKeys(AnswerKey entity)
		{
			this.SendPropertyChanging();
			entity.Answer = null;
		}
		
		private void attach_Responses(Response entity)
		{
			this.SendPropertyChanging();
			entity.Answer = this;
		}
		
		private void detach_Responses(Response entity)
		{
			this.SendPropertyChanging();
			entity.Answer = null;
		}
		
		private void Initialize()
		{
			this._AnswerKeys = new EntitySet<AnswerKey>(new Action<AnswerKey>(this.attach_AnswerKeys), new Action<AnswerKey>(this.detach_AnswerKeys));
			this._Responses = new EntitySet<Response>(new Action<Response>(this.attach_Responses), new Action<Response>(this.detach_Responses));
			this._Question = default(EntityRef<Question>);
			this._Assessment = default(EntityRef<Assessment>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnswerTags")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AnswerTag
	{
		
		private System.Guid _TagID;
		
		private System.Guid _AnswerID;
		
		public AnswerTag()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid TagID
		{
			get
			{
				return this._TagID;
			}
			set
			{
				if ((this._TagID != value))
				{
					this._TagID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid AnswerID
		{
			get
			{
				return this._AnswerID;
			}
			set
			{
				if ((this._AnswerID != value))
				{
					this._AnswerID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssessmentTags")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AssessmentTag
	{
		
		private System.Guid _TagID;
		
		private System.Guid _AssessmentID;
		
		public AssessmentTag()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid TagID
		{
			get
			{
				return this._TagID;
			}
			set
			{
				if ((this._TagID != value))
				{
					this._TagID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssessmentID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid AssessmentID
		{
			get
			{
				return this._AssessmentID;
			}
			set
			{
				if ((this._AssessmentID != value))
				{
					this._AssessmentID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssessmentTypes")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AssessmentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AssessmentTypeID;
		
		private string _Name;
		
		private double _Weight;
		
		private bool _QuestionBank;
		
		private System.Guid _CourseTermID;
		
		private EntitySet<Assessment> _Assessments;
		
		private EntityRef<CourseTerm> _CourseTerm;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAssessmentTypeIDChanging(System.Guid value);
    partial void OnAssessmentTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnWeightChanging(double value);
    partial void OnWeightChanged();
    partial void OnQuestionBankChanging(bool value);
    partial void OnQuestionBankChanged();
    partial void OnCourseTermIDChanging(System.Guid value);
    partial void OnCourseTermIDChanged();
    #endregion
		
		public AssessmentType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssessmentTypeID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid AssessmentTypeID
		{
			get
			{
				return this._AssessmentTypeID;
			}
			set
			{
				if ((this._AssessmentTypeID != value))
				{
					this.OnAssessmentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._AssessmentTypeID = value;
					this.SendPropertyChanged("AssessmentTypeID");
					this.OnAssessmentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public double Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionBank", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool QuestionBank
		{
			get
			{
				return this._QuestionBank;
			}
			set
			{
				if ((this._QuestionBank != value))
				{
					this.OnQuestionBankChanging(value);
					this.SendPropertyChanging();
					this._QuestionBank = value;
					this.SendPropertyChanged("QuestionBank");
					this.OnQuestionBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseTermID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Guid CourseTermID
		{
			get
			{
				return this._CourseTermID;
			}
			set
			{
				if ((this._CourseTermID != value))
				{
					if (this._CourseTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseTermIDChanging(value);
					this.SendPropertyChanging();
					this._CourseTermID = value;
					this.SendPropertyChanged("CourseTermID");
					this.OnCourseTermIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssessmentType_Assessment", Storage="_Assessments", ThisKey="AssessmentTypeID", OtherKey="AssessmentTypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<Assessment> Assessments
		{
			get
			{
				if ((this.serializing 
							&& (this._Assessments.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Assessments;
			}
			set
			{
				this._Assessments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseTerm_AssessmentType", Storage="_CourseTerm", ThisKey="CourseTermID", OtherKey="CourseTermID", IsForeignKey=true)]
		public CourseTerm CourseTerm
		{
			get
			{
				return this._CourseTerm.Entity;
			}
			set
			{
				CourseTerm previousValue = this._CourseTerm.Entity;
				if (((previousValue != value) 
							|| (this._CourseTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CourseTerm.Entity = null;
						previousValue.AssessmentTypes.Remove(this);
					}
					this._CourseTerm.Entity = value;
					if ((value != null))
					{
						value.AssessmentTypes.Add(this);
						this._CourseTermID = value.CourseTermID;
					}
					else
					{
						this._CourseTermID = default(System.Guid);
					}
					this.SendPropertyChanged("CourseTerm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Assessments(Assessment entity)
		{
			this.SendPropertyChanging();
			entity.AssessmentType = this;
		}
		
		private void detach_Assessments(Assessment entity)
		{
			this.SendPropertyChanging();
			entity.AssessmentType = null;
		}
		
		private void Initialize()
		{
			this._Assessments = new EntitySet<Assessment>(new Action<Assessment>(this.attach_Assessments), new Action<Assessment>(this.detach_Assessments));
			this._CourseTerm = default(EntityRef<CourseTerm>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Courses")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Course : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CourseID;
		
		private string _Name;
		
		private string _Description;
		
		private string _ShortName;
		
		private System.Guid _SiteID;
		
		private EntitySet<CourseTerm> _CourseTerms;
		
		private EntityRef<Site> _Site;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourseIDChanging(System.Guid value);
    partial void OnCourseIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnSiteIDChanging(System.Guid value);
    partial void OnSiteIDChanged();
    #endregion
		
		public Course()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid CourseID
		{
			get
			{
				return this._CourseID;
			}
			set
			{
				if ((this._CourseID != value))
				{
					this.OnCourseIDChanging(value);
					this.SendPropertyChanging();
					this._CourseID = value;
					this.SendPropertyChanged("CourseID");
					this.OnCourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Guid SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_CourseTerm", Storage="_CourseTerms", ThisKey="CourseID", OtherKey="CourseID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<CourseTerm> CourseTerms
		{
			get
			{
				if ((this.serializing 
							&& (this._CourseTerms.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CourseTerms;
			}
			set
			{
				this._CourseTerms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Course", Storage="_Site", ThisKey="SiteID", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.Courses.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.Courses.Add(this);
						this._SiteID = value.SiteID;
					}
					else
					{
						this._SiteID = default(System.Guid);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CourseTerms(CourseTerm entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_CourseTerms(CourseTerm entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
		
		private void Initialize()
		{
			this._CourseTerms = new EntitySet<CourseTerm>(new Action<CourseTerm>(this.attach_CourseTerms), new Action<CourseTerm>(this.detach_CourseTerms));
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CourseTermFiles")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CourseTermFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CourseTermFileID;
		
		private System.Guid _CourseTermID;
		
		private System.Guid _FileID;
		
		private EntityRef<CourseTerm> _CourseTerm;
		
		private EntityRef<File> _File;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourseTermFileIDChanging(System.Guid value);
    partial void OnCourseTermFileIDChanged();
    partial void OnCourseTermIDChanging(System.Guid value);
    partial void OnCourseTermIDChanged();
    partial void OnFileIDChanging(System.Guid value);
    partial void OnFileIDChanged();
    #endregion
		
		public CourseTermFile()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseTermFileID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid CourseTermFileID
		{
			get
			{
				return this._CourseTermFileID;
			}
			set
			{
				if ((this._CourseTermFileID != value))
				{
					this.OnCourseTermFileIDChanging(value);
					this.SendPropertyChanging();
					this._CourseTermFileID = value;
					this.SendPropertyChanged("CourseTermFileID");
					this.OnCourseTermFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseTermID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid CourseTermID
		{
			get
			{
				return this._CourseTermID;
			}
			set
			{
				if ((this._CourseTermID != value))
				{
					if (this._CourseTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseTermIDChanging(value);
					this.SendPropertyChanging();
					this._CourseTermID = value;
					this.SendPropertyChanged("CourseTermID");
					this.OnCourseTermIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					if (this._File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseTerm_CourseTermFile", Storage="_CourseTerm", ThisKey="CourseTermID", OtherKey="CourseTermID", IsForeignKey=true)]
		public CourseTerm CourseTerm
		{
			get
			{
				return this._CourseTerm.Entity;
			}
			set
			{
				CourseTerm previousValue = this._CourseTerm.Entity;
				if (((previousValue != value) 
							|| (this._CourseTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CourseTerm.Entity = null;
						previousValue.CourseTermFiles.Remove(this);
					}
					this._CourseTerm.Entity = value;
					if ((value != null))
					{
						value.CourseTermFiles.Add(this);
						this._CourseTermID = value.CourseTermID;
					}
					else
					{
						this._CourseTermID = default(System.Guid);
					}
					this.SendPropertyChanged("CourseTerm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_CourseTermFile", Storage="_File", ThisKey="FileID", OtherKey="FileID", IsForeignKey=true)]
		public File File
		{
			get
			{
				return this._File.Entity;
			}
			set
			{
				File previousValue = this._File.Entity;
				if (((previousValue != value) 
							|| (this._File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File.Entity = null;
						previousValue.CourseTermFiles.Remove(this);
					}
					this._File.Entity = value;
					if ((value != null))
					{
						value.CourseTermFiles.Add(this);
						this._FileID = value.FileID;
					}
					else
					{
						this._FileID = default(System.Guid);
					}
					this.SendPropertyChanged("File");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CourseTerm = default(EntityRef<CourseTerm>);
			this._File = default(EntityRef<File>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CourseTermMessages")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CourseTermMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MessageID;
		
		private System.Guid _CourseTermID;
		
		private string _Subject;
		
		private string _Body;
		
		private System.Guid _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private EntityRef<CourseTerm> _CourseTerm;
		
		private EntityRef<Profile> _Profile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIDChanging(System.Guid value);
    partial void OnMessageIDChanged();
    partial void OnCourseTermIDChanging(System.Guid value);
    partial void OnCourseTermIDChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnCreatedByChanging(System.Guid value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public CourseTermMessage()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseTermID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid CourseTermID
		{
			get
			{
				return this._CourseTermID;
			}
			set
			{
				if ((this._CourseTermID != value))
				{
					if (this._CourseTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseTermIDChanging(value);
					this.SendPropertyChanging();
					this._CourseTermID = value;
					this.SendPropertyChanged("CourseTermID");
					this.OnCourseTermIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Guid CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._Profile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseTerm_CourseTermMessage", Storage="_CourseTerm", ThisKey="CourseTermID", OtherKey="CourseTermID", IsForeignKey=true)]
		public CourseTerm CourseTerm
		{
			get
			{
				return this._CourseTerm.Entity;
			}
			set
			{
				CourseTerm previousValue = this._CourseTerm.Entity;
				if (((previousValue != value) 
							|| (this._CourseTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CourseTerm.Entity = null;
						previousValue.CourseTermMessages.Remove(this);
					}
					this._CourseTerm.Entity = value;
					if ((value != null))
					{
						value.CourseTermMessages.Add(this);
						this._CourseTermID = value.CourseTermID;
					}
					else
					{
						this._CourseTermID = default(System.Guid);
					}
					this.SendPropertyChanged("CourseTerm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_CourseTermMessage", Storage="_Profile", ThisKey="CreatedBy", OtherKey="MembershipID", IsForeignKey=true)]
		public Profile Profile
		{
			get
			{
				return this._Profile.Entity;
			}
			set
			{
				Profile previousValue = this._Profile.Entity;
				if (((previousValue != value) 
							|| (this._Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profile.Entity = null;
						previousValue.CourseTermMessages.Remove(this);
					}
					this._Profile.Entity = value;
					if ((value != null))
					{
						value.CourseTermMessages.Add(this);
						this._CreatedBy = value.MembershipID;
					}
					else
					{
						this._CreatedBy = default(System.Guid);
					}
					this.SendPropertyChanged("Profile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CourseTerm = default(EntityRef<CourseTerm>);
			this._Profile = default(EntityRef<Profile>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CourseTerms")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CourseTerm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CourseTermID;
		
		private string _Name;
		
		private string _ShortName;
		
		private string _Information;
		
		private System.Guid _Instructor;
		
		private System.Guid _CourseID;
		
		private System.Guid _TermID;
		
		private System.Guid _SiteID;
		
		private string _Password;
		
		private System.Nullable<System.Guid> _Syllabus;
		
		private System.Nullable<byte> _State;
		
		private EntitySet<AssessmentType> _AssessmentTypes;
		
		private EntitySet<CourseTermFile> _CourseTermFiles;
		
		private EntitySet<CourseTermMessage> _CourseTermMessages;
		
		private EntitySet<Invitation> _Invitations;
		
		private EntitySet<SubmissionException> _SubmissionExceptions;
		
		private EntitySet<Tag> _Tags;
		
		private EntitySet<CourseTermMember> _CourseTermMembers;
		
		private EntitySet<Assessment> _Assessments;
		
		private EntityRef<Course> _Course;
		
		private EntityRef<File> _File;
		
		private EntityRef<Site> _Site;
		
		private EntityRef<Term> _Term;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourseTermIDChanging(System.Guid value);
    partial void OnCourseTermIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnInformationChanging(string value);
    partial void OnInformationChanged();
    partial void OnInstructorChanging(System.Guid value);
    partial void OnInstructorChanged();
    partial void OnCourseIDChanging(System.Guid value);
    partial void OnCourseIDChanged();
    partial void OnTermIDChanging(System.Guid value);
    partial void OnTermIDChanged();
    partial void OnSiteIDChanging(System.Guid value);
    partial void OnSiteIDChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnSyllabusChanging(System.Nullable<System.Guid> value);
    partial void OnSyllabusChanged();
    partial void OnStateChanging(System.Nullable<byte> value);
    partial void OnStateChanged();
    #endregion
		
		public CourseTerm()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseTermID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid CourseTermID
		{
			get
			{
				return this._CourseTermID;
			}
			set
			{
				if ((this._CourseTermID != value))
				{
					this.OnCourseTermIDChanging(value);
					this.SendPropertyChanging();
					this._CourseTermID = value;
					this.SendPropertyChanged("CourseTermID");
					this.OnCourseTermIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Information", DbType="VarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Information
		{
			get
			{
				return this._Information;
			}
			set
			{
				if ((this._Information != value))
				{
					this.OnInformationChanging(value);
					this.SendPropertyChanging();
					this._Information = value;
					this.SendPropertyChanged("Information");
					this.OnInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instructor", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Guid Instructor
		{
			get
			{
				return this._Instructor;
			}
			set
			{
				if ((this._Instructor != value))
				{
					this.OnInstructorChanging(value);
					this.SendPropertyChanging();
					this._Instructor = value;
					this.SendPropertyChanged("Instructor");
					this.OnInstructorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Guid CourseID
		{
			get
			{
				return this._CourseID;
			}
			set
			{
				if ((this._CourseID != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseIDChanging(value);
					this.SendPropertyChanging();
					this._CourseID = value;
					this.SendPropertyChanged("CourseID");
					this.OnCourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Guid TermID
		{
			get
			{
				return this._TermID;
			}
			set
			{
				if ((this._TermID != value))
				{
					if (this._Term.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIDChanging(value);
					this.SendPropertyChanging();
					this._TermID = value;
					this.SendPropertyChanged("TermID");
					this.OnTermIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Guid SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Syllabus", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<System.Guid> Syllabus
		{
			get
			{
				return this._Syllabus;
			}
			set
			{
				if ((this._Syllabus != value))
				{
					if (this._File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSyllabusChanging(value);
					this.SendPropertyChanging();
					this._Syllabus = value;
					this.SendPropertyChanged("Syllabus");
					this.OnSyllabusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="TinyInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<byte> State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseTerm_AssessmentType", Storage="_AssessmentTypes", ThisKey="CourseTermID", OtherKey="CourseTermID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<AssessmentType> AssessmentTypes
		{
			get
			{
				if ((this.serializing 
							&& (this._AssessmentTypes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AssessmentTypes;
			}
			set
			{
				this._AssessmentTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseTerm_CourseTermFile", Storage="_CourseTermFiles", ThisKey="CourseTermID", OtherKey="CourseTermID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<CourseTermFile> CourseTermFiles
		{
			get
			{
				if ((this.serializing 
							&& (this._CourseTermFiles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CourseTermFiles;
			}
			set
			{
				this._CourseTermFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseTerm_CourseTermMessage", Storage="_CourseTermMessages", ThisKey="CourseTermID", OtherKey="CourseTermID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<CourseTermMessage> CourseTermMessages
		{
			get
			{
				if ((this.serializing 
							&& (this._CourseTermMessages.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CourseTermMessages;
			}
			set
			{
				this._CourseTermMessages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseTerm_Invitation", Storage="_Invitations", ThisKey="CourseTermID", OtherKey="CourseTermID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<Invitation> Invitations
		{
			get
			{
				if ((this.serializing 
							&& (this._Invitations.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Invitations;
			}
			set
			{
				this._Invitations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseTerm_SubmissionException", Storage="_SubmissionExceptions", ThisKey="CourseTermID", OtherKey="CourseTermID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<SubmissionException> SubmissionExceptions
		{
			get
			{
				if ((this.serializing 
							&& (this._SubmissionExceptions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SubmissionExceptions;
			}
			set
			{
				this._SubmissionExceptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseTerm_Tag", Storage="_Tags", ThisKey="CourseTermID", OtherKey="CourseTermID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<Tag> Tags
		{
			get
			{
				if ((this.serializing 
							&& (this._Tags.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Tags;
			}
			set
			{
				this._Tags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseTerm_CourseTermMember", Storage="_CourseTermMembers", ThisKey="CourseTermID", OtherKey="CourseTermID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<CourseTermMember> CourseTermMembers
		{
			get
			{
				if ((this.serializing 
							&& (this._CourseTermMembers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CourseTermMembers;
			}
			set
			{
				this._CourseTermMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseTerm_Assessment", Storage="_Assessments", ThisKey="CourseTermID", OtherKey="CourseTermID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<Assessment> Assessments
		{
			get
			{
				if ((this.serializing 
							&& (this._Assessments.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Assessments;
			}
			set
			{
				this._Assessments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_CourseTerm", Storage="_Course", ThisKey="CourseID", OtherKey="CourseID", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.CourseTerms.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.CourseTerms.Add(this);
						this._CourseID = value.CourseID;
					}
					else
					{
						this._CourseID = default(System.Guid);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_CourseTerm", Storage="_File", ThisKey="Syllabus", OtherKey="FileID", IsForeignKey=true)]
		public File File
		{
			get
			{
				return this._File.Entity;
			}
			set
			{
				File previousValue = this._File.Entity;
				if (((previousValue != value) 
							|| (this._File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File.Entity = null;
						previousValue.CourseTerms.Remove(this);
					}
					this._File.Entity = value;
					if ((value != null))
					{
						value.CourseTerms.Add(this);
						this._Syllabus = value.FileID;
					}
					else
					{
						this._Syllabus = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("File");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_CourseTerm", Storage="_Site", ThisKey="SiteID", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.CourseTerms.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.CourseTerms.Add(this);
						this._SiteID = value.SiteID;
					}
					else
					{
						this._SiteID = default(System.Guid);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Term_CourseTerm", Storage="_Term", ThisKey="TermID", OtherKey="TermID", IsForeignKey=true)]
		public Term Term
		{
			get
			{
				return this._Term.Entity;
			}
			set
			{
				Term previousValue = this._Term.Entity;
				if (((previousValue != value) 
							|| (this._Term.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Term.Entity = null;
						previousValue.CourseTerms.Remove(this);
					}
					this._Term.Entity = value;
					if ((value != null))
					{
						value.CourseTerms.Add(this);
						this._TermID = value.TermID;
					}
					else
					{
						this._TermID = default(System.Guid);
					}
					this.SendPropertyChanged("Term");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AssessmentTypes(AssessmentType entity)
		{
			this.SendPropertyChanging();
			entity.CourseTerm = this;
		}
		
		private void detach_AssessmentTypes(AssessmentType entity)
		{
			this.SendPropertyChanging();
			entity.CourseTerm = null;
		}
		
		private void attach_CourseTermFiles(CourseTermFile entity)
		{
			this.SendPropertyChanging();
			entity.CourseTerm = this;
		}
		
		private void detach_CourseTermFiles(CourseTermFile entity)
		{
			this.SendPropertyChanging();
			entity.CourseTerm = null;
		}
		
		private void attach_CourseTermMessages(CourseTermMessage entity)
		{
			this.SendPropertyChanging();
			entity.CourseTerm = this;
		}
		
		private void detach_CourseTermMessages(CourseTermMessage entity)
		{
			this.SendPropertyChanging();
			entity.CourseTerm = null;
		}
		
		private void attach_Invitations(Invitation entity)
		{
			this.SendPropertyChanging();
			entity.CourseTerm = this;
		}
		
		private void detach_Invitations(Invitation entity)
		{
			this.SendPropertyChanging();
			entity.CourseTerm = null;
		}
		
		private void attach_SubmissionExceptions(SubmissionException entity)
		{
			this.SendPropertyChanging();
			entity.CourseTerm = this;
		}
		
		private void detach_SubmissionExceptions(SubmissionException entity)
		{
			this.SendPropertyChanging();
			entity.CourseTerm = null;
		}
		
		private void attach_Tags(Tag entity)
		{
			this.SendPropertyChanging();
			entity.CourseTerm = this;
		}
		
		private void detach_Tags(Tag entity)
		{
			this.SendPropertyChanging();
			entity.CourseTerm = null;
		}
		
		private void attach_CourseTermMembers(CourseTermMember entity)
		{
			this.SendPropertyChanging();
			entity.CourseTerm = this;
		}
		
		private void detach_CourseTermMembers(CourseTermMember entity)
		{
			this.SendPropertyChanging();
			entity.CourseTerm = null;
		}
		
		private void attach_Assessments(Assessment entity)
		{
			this.SendPropertyChanging();
			entity.CourseTerm = this;
		}
		
		private void detach_Assessments(Assessment entity)
		{
			this.SendPropertyChanging();
			entity.CourseTerm = null;
		}
		
		private void Initialize()
		{
			this._AssessmentTypes = new EntitySet<AssessmentType>(new Action<AssessmentType>(this.attach_AssessmentTypes), new Action<AssessmentType>(this.detach_AssessmentTypes));
			this._CourseTermFiles = new EntitySet<CourseTermFile>(new Action<CourseTermFile>(this.attach_CourseTermFiles), new Action<CourseTermFile>(this.detach_CourseTermFiles));
			this._CourseTermMessages = new EntitySet<CourseTermMessage>(new Action<CourseTermMessage>(this.attach_CourseTermMessages), new Action<CourseTermMessage>(this.detach_CourseTermMessages));
			this._Invitations = new EntitySet<Invitation>(new Action<Invitation>(this.attach_Invitations), new Action<Invitation>(this.detach_Invitations));
			this._SubmissionExceptions = new EntitySet<SubmissionException>(new Action<SubmissionException>(this.attach_SubmissionExceptions), new Action<SubmissionException>(this.detach_SubmissionExceptions));
			this._Tags = new EntitySet<Tag>(new Action<Tag>(this.attach_Tags), new Action<Tag>(this.detach_Tags));
			this._CourseTermMembers = new EntitySet<CourseTermMember>(new Action<CourseTermMember>(this.attach_CourseTermMembers), new Action<CourseTermMember>(this.detach_CourseTermMembers));
			this._Assessments = new EntitySet<Assessment>(new Action<Assessment>(this.attach_Assessments), new Action<Assessment>(this.detach_Assessments));
			this._Course = default(EntityRef<Course>);
			this._File = default(EntityRef<File>);
			this._Site = default(EntityRef<Site>);
			this._Term = default(EntityRef<Term>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Files")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class File : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _FileID;
		
		private string _Name;
		
		private string _Mimetype;
		
		private System.Data.Linq.Binary _Data;
		
		private System.Guid _OwnerID;
		
		private string _Title;
		
		private string _Description;
		
		private EntitySet<CourseTermFile> _CourseTermFiles;
		
		private EntitySet<CourseTerm> _CourseTerms;
		
		private EntityRef<Profile> _Profile;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIDChanging(System.Guid value);
    partial void OnFileIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMimetypeChanging(string value);
    partial void OnMimetypeChanged();
    partial void OnDataChanging(System.Data.Linq.Binary value);
    partial void OnDataChanged();
    partial void OnOwnerIDChanging(System.Guid value);
    partial void OnOwnerIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public File()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mimetype", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Mimetype
		{
			get
			{
				return this._Mimetype;
			}
			set
			{
				if ((this._Mimetype != value))
				{
					this.OnMimetypeChanging(value);
					this.SendPropertyChanging();
					this._Mimetype = value;
					this.SendPropertyChanged("Mimetype");
					this.OnMimetypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Data.Linq.Binary Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Guid OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					if (this._Profile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerID = value;
					this.SendPropertyChanged("OwnerID");
					this.OnOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(300)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_CourseTermFile", Storage="_CourseTermFiles", ThisKey="FileID", OtherKey="FileID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<CourseTermFile> CourseTermFiles
		{
			get
			{
				if ((this.serializing 
							&& (this._CourseTermFiles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CourseTermFiles;
			}
			set
			{
				this._CourseTermFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_CourseTerm", Storage="_CourseTerms", ThisKey="FileID", OtherKey="Syllabus")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<CourseTerm> CourseTerms
		{
			get
			{
				if ((this.serializing 
							&& (this._CourseTerms.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CourseTerms;
			}
			set
			{
				this._CourseTerms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_File", Storage="_Profile", ThisKey="OwnerID", OtherKey="MembershipID", IsForeignKey=true)]
		public Profile Profile
		{
			get
			{
				return this._Profile.Entity;
			}
			set
			{
				Profile previousValue = this._Profile.Entity;
				if (((previousValue != value) 
							|| (this._Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profile.Entity = null;
						previousValue.Files.Remove(this);
					}
					this._Profile.Entity = value;
					if ((value != null))
					{
						value.Files.Add(this);
						this._OwnerID = value.MembershipID;
					}
					else
					{
						this._OwnerID = default(System.Guid);
					}
					this.SendPropertyChanged("Profile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CourseTermFiles(CourseTermFile entity)
		{
			this.SendPropertyChanging();
			entity.File = this;
		}
		
		private void detach_CourseTermFiles(CourseTermFile entity)
		{
			this.SendPropertyChanging();
			entity.File = null;
		}
		
		private void attach_CourseTerms(CourseTerm entity)
		{
			this.SendPropertyChanging();
			entity.File = this;
		}
		
		private void detach_CourseTerms(CourseTerm entity)
		{
			this.SendPropertyChanging();
			entity.File = null;
		}
		
		private void Initialize()
		{
			this._CourseTermFiles = new EntitySet<CourseTermFile>(new Action<CourseTermFile>(this.attach_CourseTermFiles), new Action<CourseTermFile>(this.detach_CourseTermFiles));
			this._CourseTerms = new EntitySet<CourseTerm>(new Action<CourseTerm>(this.attach_CourseTerms), new Action<CourseTerm>(this.detach_CourseTerms));
			this._Profile = default(EntityRef<Profile>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProgramOutcomes")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ProgramOutcome : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ProgramOutcomeID;
		
		private string _Label;
		
		private string _Description;
		
		private System.Guid _SiteID;
		
		private EntitySet<TagProgramOutcome> _TagProgramOutcomes;
		
		private EntityRef<Site> _Site;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProgramOutcomeIDChanging(System.Guid value);
    partial void OnProgramOutcomeIDChanged();
    partial void OnLabelChanging(string value);
    partial void OnLabelChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSiteIDChanging(System.Guid value);
    partial void OnSiteIDChanged();
    #endregion
		
		public ProgramOutcome()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramOutcomeID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ProgramOutcomeID
		{
			get
			{
				return this._ProgramOutcomeID;
			}
			set
			{
				if ((this._ProgramOutcomeID != value))
				{
					this.OnProgramOutcomeIDChanging(value);
					this.SendPropertyChanging();
					this._ProgramOutcomeID = value;
					this.SendPropertyChanged("ProgramOutcomeID");
					this.OnProgramOutcomeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Label", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Label
		{
			get
			{
				return this._Label;
			}
			set
			{
				if ((this._Label != value))
				{
					this.OnLabelChanging(value);
					this.SendPropertyChanging();
					this._Label = value;
					this.SendPropertyChanged("Label");
					this.OnLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Guid SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramOutcome_TagProgramOutcome", Storage="_TagProgramOutcomes", ThisKey="ProgramOutcomeID", OtherKey="ProgramOutcomeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<TagProgramOutcome> TagProgramOutcomes
		{
			get
			{
				if ((this.serializing 
							&& (this._TagProgramOutcomes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TagProgramOutcomes;
			}
			set
			{
				this._TagProgramOutcomes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_ProgramOutcome", Storage="_Site", ThisKey="SiteID", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.ProgramOutcomes.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.ProgramOutcomes.Add(this);
						this._SiteID = value.SiteID;
					}
					else
					{
						this._SiteID = default(System.Guid);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TagProgramOutcomes(TagProgramOutcome entity)
		{
			this.SendPropertyChanging();
			entity.ProgramOutcome = this;
		}
		
		private void detach_TagProgramOutcomes(TagProgramOutcome entity)
		{
			this.SendPropertyChanging();
			entity.ProgramOutcome = null;
		}
		
		private void Initialize()
		{
			this._TagProgramOutcomes = new EntitySet<TagProgramOutcome>(new Action<TagProgramOutcome>(this.attach_TagProgramOutcomes), new Action<TagProgramOutcome>(this.detach_TagProgramOutcomes));
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invitations")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Invitation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _InvitationID;
		
		private System.Guid _SiteID;
		
		private byte _SiteAccessLevel;
		
		private System.Nullable<System.Guid> _CourseTermID;
		
		private System.Nullable<byte> _CourseTermAccessLevel;
		
		private bool _Accepted;
		
		private string _Email;
		
		private EntityRef<CourseTerm> _CourseTerm;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvitationIDChanging(System.Guid value);
    partial void OnInvitationIDChanged();
    partial void OnSiteIDChanging(System.Guid value);
    partial void OnSiteIDChanged();
    partial void OnSiteAccessLevelChanging(byte value);
    partial void OnSiteAccessLevelChanged();
    partial void OnCourseTermIDChanging(System.Nullable<System.Guid> value);
    partial void OnCourseTermIDChanged();
    partial void OnCourseTermAccessLevelChanging(System.Nullable<byte> value);
    partial void OnCourseTermAccessLevelChanged();
    partial void OnAcceptedChanging(bool value);
    partial void OnAcceptedChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Invitation()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvitationID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid InvitationID
		{
			get
			{
				return this._InvitationID;
			}
			set
			{
				if ((this._InvitationID != value))
				{
					this.OnInvitationIDChanging(value);
					this.SendPropertyChanging();
					this._InvitationID = value;
					this.SendPropertyChanged("InvitationID");
					this.OnInvitationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteAccessLevel", DbType="TinyInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public byte SiteAccessLevel
		{
			get
			{
				return this._SiteAccessLevel;
			}
			set
			{
				if ((this._SiteAccessLevel != value))
				{
					this.OnSiteAccessLevelChanging(value);
					this.SendPropertyChanging();
					this._SiteAccessLevel = value;
					this.SendPropertyChanged("SiteAccessLevel");
					this.OnSiteAccessLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseTermID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.Guid> CourseTermID
		{
			get
			{
				return this._CourseTermID;
			}
			set
			{
				if ((this._CourseTermID != value))
				{
					if (this._CourseTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseTermIDChanging(value);
					this.SendPropertyChanging();
					this._CourseTermID = value;
					this.SendPropertyChanged("CourseTermID");
					this.OnCourseTermIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseTermAccessLevel", DbType="TinyInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<byte> CourseTermAccessLevel
		{
			get
			{
				return this._CourseTermAccessLevel;
			}
			set
			{
				if ((this._CourseTermAccessLevel != value))
				{
					this.OnCourseTermAccessLevelChanging(value);
					this.SendPropertyChanging();
					this._CourseTermAccessLevel = value;
					this.SendPropertyChanged("CourseTermAccessLevel");
					this.OnCourseTermAccessLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accepted", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool Accepted
		{
			get
			{
				return this._Accepted;
			}
			set
			{
				if ((this._Accepted != value))
				{
					this.OnAcceptedChanging(value);
					this.SendPropertyChanging();
					this._Accepted = value;
					this.SendPropertyChanged("Accepted");
					this.OnAcceptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseTerm_Invitation", Storage="_CourseTerm", ThisKey="CourseTermID", OtherKey="CourseTermID", IsForeignKey=true)]
		public CourseTerm CourseTerm
		{
			get
			{
				return this._CourseTerm.Entity;
			}
			set
			{
				CourseTerm previousValue = this._CourseTerm.Entity;
				if (((previousValue != value) 
							|| (this._CourseTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CourseTerm.Entity = null;
						previousValue.Invitations.Remove(this);
					}
					this._CourseTerm.Entity = value;
					if ((value != null))
					{
						value.Invitations.Add(this);
						this._CourseTermID = value.CourseTermID;
					}
					else
					{
						this._CourseTermID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("CourseTerm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Invitation", Storage="_Site", ThisKey="SiteID", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.Invitations.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.Invitations.Add(this);
						this._SiteID = value.SiteID;
					}
					else
					{
						this._SiteID = default(System.Guid);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CourseTerm = default(EntityRef<CourseTerm>);
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Profiles")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MembershipID;
		
		private string _SchoolIDNumber;
		
		private string _FirstName;
		
		private string _LastName;
		
		private byte _AccessLevel;
		
		private string _Major;
		
		private EntitySet<CourseTermMessage> _CourseTermMessages;
		
		private EntitySet<File> _Files;
		
		private EntitySet<SiteMember> _SiteMembers;
		
		private EntitySet<SubmissionException> _SubmissionExceptions;
		
		private EntitySet<SubmissionRecord> _SubmissionRecords;
		
		private EntitySet<Tag> _Tags;
		
		private EntitySet<CourseTermMember> _CourseTermMembers;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMembershipIDChanging(System.Guid value);
    partial void OnMembershipIDChanged();
    partial void OnSchoolIDNumberChanging(string value);
    partial void OnSchoolIDNumberChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnAccessLevelChanging(byte value);
    partial void OnAccessLevelChanged();
    partial void OnMajorChanging(string value);
    partial void OnMajorChanged();
    #endregion
		
		public Profile()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MembershipID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid MembershipID
		{
			get
			{
				return this._MembershipID;
			}
			set
			{
				if ((this._MembershipID != value))
				{
					this.OnMembershipIDChanging(value);
					this.SendPropertyChanging();
					this._MembershipID = value;
					this.SendPropertyChanged("MembershipID");
					this.OnMembershipIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolIDNumber", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string SchoolIDNumber
		{
			get
			{
				return this._SchoolIDNumber;
			}
			set
			{
				if ((this._SchoolIDNumber != value))
				{
					this.OnSchoolIDNumberChanging(value);
					this.SendPropertyChanging();
					this._SchoolIDNumber = value;
					this.SendPropertyChanged("SchoolIDNumber");
					this.OnSchoolIDNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessLevel", DbType="TinyInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public byte AccessLevel
		{
			get
			{
				return this._AccessLevel;
			}
			set
			{
				if ((this._AccessLevel != value))
				{
					this.OnAccessLevelChanging(value);
					this.SendPropertyChanging();
					this._AccessLevel = value;
					this.SendPropertyChanged("AccessLevel");
					this.OnAccessLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Major", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Major
		{
			get
			{
				return this._Major;
			}
			set
			{
				if ((this._Major != value))
				{
					this.OnMajorChanging(value);
					this.SendPropertyChanging();
					this._Major = value;
					this.SendPropertyChanged("Major");
					this.OnMajorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_CourseTermMessage", Storage="_CourseTermMessages", ThisKey="MembershipID", OtherKey="CreatedBy")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<CourseTermMessage> CourseTermMessages
		{
			get
			{
				if ((this.serializing 
							&& (this._CourseTermMessages.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CourseTermMessages;
			}
			set
			{
				this._CourseTermMessages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_File", Storage="_Files", ThisKey="MembershipID", OtherKey="OwnerID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<File> Files
		{
			get
			{
				if ((this.serializing 
							&& (this._Files.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Files;
			}
			set
			{
				this._Files.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_SiteMember", Storage="_SiteMembers", ThisKey="MembershipID", OtherKey="MembershipID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<SiteMember> SiteMembers
		{
			get
			{
				if ((this.serializing 
							&& (this._SiteMembers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SiteMembers;
			}
			set
			{
				this._SiteMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_SubmissionException", Storage="_SubmissionExceptions", ThisKey="MembershipID", OtherKey="StudentID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<SubmissionException> SubmissionExceptions
		{
			get
			{
				if ((this.serializing 
							&& (this._SubmissionExceptions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SubmissionExceptions;
			}
			set
			{
				this._SubmissionExceptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_SubmissionRecord", Storage="_SubmissionRecords", ThisKey="MembershipID", OtherKey="StudentID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<SubmissionRecord> SubmissionRecords
		{
			get
			{
				if ((this.serializing 
							&& (this._SubmissionRecords.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SubmissionRecords;
			}
			set
			{
				this._SubmissionRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_Tag", Storage="_Tags", ThisKey="MembershipID", OtherKey="CreatedBy")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<Tag> Tags
		{
			get
			{
				if ((this.serializing 
							&& (this._Tags.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Tags;
			}
			set
			{
				this._Tags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_CourseTermMember", Storage="_CourseTermMembers", ThisKey="MembershipID", OtherKey="MembershipID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<CourseTermMember> CourseTermMembers
		{
			get
			{
				if ((this.serializing 
							&& (this._CourseTermMembers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CourseTermMembers;
			}
			set
			{
				this._CourseTermMembers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CourseTermMessages(CourseTermMessage entity)
		{
			this.SendPropertyChanging();
			entity.Profile = this;
		}
		
		private void detach_CourseTermMessages(CourseTermMessage entity)
		{
			this.SendPropertyChanging();
			entity.Profile = null;
		}
		
		private void attach_Files(File entity)
		{
			this.SendPropertyChanging();
			entity.Profile = this;
		}
		
		private void detach_Files(File entity)
		{
			this.SendPropertyChanging();
			entity.Profile = null;
		}
		
		private void attach_SiteMembers(SiteMember entity)
		{
			this.SendPropertyChanging();
			entity.Profile = this;
		}
		
		private void detach_SiteMembers(SiteMember entity)
		{
			this.SendPropertyChanging();
			entity.Profile = null;
		}
		
		private void attach_SubmissionExceptions(SubmissionException entity)
		{
			this.SendPropertyChanging();
			entity.Profile = this;
		}
		
		private void detach_SubmissionExceptions(SubmissionException entity)
		{
			this.SendPropertyChanging();
			entity.Profile = null;
		}
		
		private void attach_SubmissionRecords(SubmissionRecord entity)
		{
			this.SendPropertyChanging();
			entity.Profile = this;
		}
		
		private void detach_SubmissionRecords(SubmissionRecord entity)
		{
			this.SendPropertyChanging();
			entity.Profile = null;
		}
		
		private void attach_Tags(Tag entity)
		{
			this.SendPropertyChanging();
			entity.Profile = this;
		}
		
		private void detach_Tags(Tag entity)
		{
			this.SendPropertyChanging();
			entity.Profile = null;
		}
		
		private void attach_CourseTermMembers(CourseTermMember entity)
		{
			this.SendPropertyChanging();
			entity.Profile = this;
		}
		
		private void detach_CourseTermMembers(CourseTermMember entity)
		{
			this.SendPropertyChanging();
			entity.Profile = null;
		}
		
		private void Initialize()
		{
			this._CourseTermMessages = new EntitySet<CourseTermMessage>(new Action<CourseTermMessage>(this.attach_CourseTermMessages), new Action<CourseTermMessage>(this.detach_CourseTermMessages));
			this._Files = new EntitySet<File>(new Action<File>(this.attach_Files), new Action<File>(this.detach_Files));
			this._SiteMembers = new EntitySet<SiteMember>(new Action<SiteMember>(this.attach_SiteMembers), new Action<SiteMember>(this.detach_SiteMembers));
			this._SubmissionExceptions = new EntitySet<SubmissionException>(new Action<SubmissionException>(this.attach_SubmissionExceptions), new Action<SubmissionException>(this.detach_SubmissionExceptions));
			this._SubmissionRecords = new EntitySet<SubmissionRecord>(new Action<SubmissionRecord>(this.attach_SubmissionRecords), new Action<SubmissionRecord>(this.detach_SubmissionRecords));
			this._Tags = new EntitySet<Tag>(new Action<Tag>(this.attach_Tags), new Action<Tag>(this.detach_Tags));
			this._CourseTermMembers = new EntitySet<CourseTermMember>(new Action<CourseTermMember>(this.attach_CourseTermMembers), new Action<CourseTermMember>(this.detach_CourseTermMembers));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Questions")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Question : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _QuestionID;
		
		private double _Weight;
		
		private System.Guid _AssessmentID;
		
		private string _Data;
		
		private EntitySet<Answer> _Answers;
		
		private EntityRef<Assessment> _Assessment;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuestionIDChanging(System.Guid value);
    partial void OnQuestionIDChanged();
    partial void OnWeightChanging(double value);
    partial void OnWeightChanged();
    partial void OnAssessmentIDChanging(System.Guid value);
    partial void OnAssessmentIDChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    #endregion
		
		public Question()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public double Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssessmentID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid AssessmentID
		{
			get
			{
				return this._AssessmentID;
			}
			set
			{
				if ((this._AssessmentID != value))
				{
					if (this._Assessment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssessmentIDChanging(value);
					this.SendPropertyChanging();
					this._AssessmentID = value;
					this.SendPropertyChanged("AssessmentID");
					this.OnAssessmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_Answer", Storage="_Answers", ThisKey="QuestionID", OtherKey="QuestionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<Answer> Answers
		{
			get
			{
				if ((this.serializing 
							&& (this._Answers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Answers;
			}
			set
			{
				this._Answers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Assessment_Question", Storage="_Assessment", ThisKey="AssessmentID", OtherKey="AssessmentID", IsForeignKey=true)]
		public Assessment Assessment
		{
			get
			{
				return this._Assessment.Entity;
			}
			set
			{
				Assessment previousValue = this._Assessment.Entity;
				if (((previousValue != value) 
							|| (this._Assessment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Assessment.Entity = null;
						previousValue.Questions.Remove(this);
					}
					this._Assessment.Entity = value;
					if ((value != null))
					{
						value.Questions.Add(this);
						this._AssessmentID = value.AssessmentID;
					}
					else
					{
						this._AssessmentID = default(System.Guid);
					}
					this.SendPropertyChanged("Assessment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Answers(Answer entity)
		{
			this.SendPropertyChanging();
			entity.Question = this;
		}
		
		private void detach_Answers(Answer entity)
		{
			this.SendPropertyChanging();
			entity.Question = null;
		}
		
		private void Initialize()
		{
			this._Answers = new EntitySet<Answer>(new Action<Answer>(this.attach_Answers), new Action<Answer>(this.detach_Answers));
			this._Assessment = default(EntityRef<Assessment>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuestionTags")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class QuestionTag
	{
		
		private System.Guid _TagID;
		
		private System.Guid _QuestionID;
		
		public QuestionTag()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid TagID
		{
			get
			{
				return this._TagID;
			}
			set
			{
				if ((this._TagID != value))
				{
					this._TagID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					this._QuestionID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Responses")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Response : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ResponseID;
		
		private System.Guid _SubmissionRecordID;
		
		private System.Guid _AnswerID;
		
		private string _ResponseText;
		
		private System.Nullable<double> _Score;
		
		private string _Comment;
		
		private EntityRef<Answer> _Answer;
		
		private EntityRef<SubmissionRecord> _SubmissionRecord;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResponseIDChanging(System.Guid value);
    partial void OnResponseIDChanged();
    partial void OnSubmissionRecordIDChanging(System.Guid value);
    partial void OnSubmissionRecordIDChanged();
    partial void OnAnswerIDChanging(System.Guid value);
    partial void OnAnswerIDChanged();
    partial void OnResponseTextChanging(string value);
    partial void OnResponseTextChanged();
    partial void OnScoreChanging(System.Nullable<double> value);
    partial void OnScoreChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public Response()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ResponseID
		{
			get
			{
				return this._ResponseID;
			}
			set
			{
				if ((this._ResponseID != value))
				{
					this.OnResponseIDChanging(value);
					this.SendPropertyChanging();
					this._ResponseID = value;
					this.SendPropertyChanged("ResponseID");
					this.OnResponseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmissionRecordID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid SubmissionRecordID
		{
			get
			{
				return this._SubmissionRecordID;
			}
			set
			{
				if ((this._SubmissionRecordID != value))
				{
					if (this._SubmissionRecord.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubmissionRecordIDChanging(value);
					this.SendPropertyChanging();
					this._SubmissionRecordID = value;
					this.SendPropertyChanged("SubmissionRecordID");
					this.OnSubmissionRecordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid AnswerID
		{
			get
			{
				return this._AnswerID;
			}
			set
			{
				if ((this._AnswerID != value))
				{
					if (this._Answer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnswerIDChanging(value);
					this.SendPropertyChanging();
					this._AnswerID = value;
					this.SendPropertyChanged("AnswerID");
					this.OnAnswerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseText", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ResponseText
		{
			get
			{
				return this._ResponseText;
			}
			set
			{
				if ((this._ResponseText != value))
				{
					this.OnResponseTextChanging(value);
					this.SendPropertyChanging();
					this._ResponseText = value;
					this.SendPropertyChanged("ResponseText");
					this.OnResponseTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<double> Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Answer_Response", Storage="_Answer", ThisKey="AnswerID", OtherKey="AnswerID", IsForeignKey=true)]
		public Answer Answer
		{
			get
			{
				return this._Answer.Entity;
			}
			set
			{
				Answer previousValue = this._Answer.Entity;
				if (((previousValue != value) 
							|| (this._Answer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Answer.Entity = null;
						previousValue.Responses.Remove(this);
					}
					this._Answer.Entity = value;
					if ((value != null))
					{
						value.Responses.Add(this);
						this._AnswerID = value.AnswerID;
					}
					else
					{
						this._AnswerID = default(System.Guid);
					}
					this.SendPropertyChanged("Answer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubmissionRecord_Response", Storage="_SubmissionRecord", ThisKey="SubmissionRecordID", OtherKey="SubmissionRecordID", IsForeignKey=true)]
		public SubmissionRecord SubmissionRecord
		{
			get
			{
				return this._SubmissionRecord.Entity;
			}
			set
			{
				SubmissionRecord previousValue = this._SubmissionRecord.Entity;
				if (((previousValue != value) 
							|| (this._SubmissionRecord.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubmissionRecord.Entity = null;
						previousValue.Responses.Remove(this);
					}
					this._SubmissionRecord.Entity = value;
					if ((value != null))
					{
						value.Responses.Add(this);
						this._SubmissionRecordID = value.SubmissionRecordID;
					}
					else
					{
						this._SubmissionRecordID = default(System.Guid);
					}
					this.SendPropertyChanged("SubmissionRecord");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Answer = default(EntityRef<Answer>);
			this._SubmissionRecord = default(EntityRef<SubmissionRecord>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SiteMembers")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SiteMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SiteMemberID;
		
		private System.Guid _SiteID;
		
		private System.Guid _MembershipID;
		
		private byte _AccessLevel;
		
		private EntityRef<Profile> _Profile;
		
		private EntityRef<Site> _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteMemberIDChanging(System.Guid value);
    partial void OnSiteMemberIDChanged();
    partial void OnSiteIDChanging(System.Guid value);
    partial void OnSiteIDChanged();
    partial void OnMembershipIDChanging(System.Guid value);
    partial void OnMembershipIDChanged();
    partial void OnAccessLevelChanging(byte value);
    partial void OnAccessLevelChanged();
    #endregion
		
		public SiteMember()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteMemberID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid SiteMemberID
		{
			get
			{
				return this._SiteMemberID;
			}
			set
			{
				if ((this._SiteMemberID != value))
				{
					this.OnSiteMemberIDChanging(value);
					this.SendPropertyChanging();
					this._SiteMemberID = value;
					this.SendPropertyChanged("SiteMemberID");
					this.OnSiteMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MembershipID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid MembershipID
		{
			get
			{
				return this._MembershipID;
			}
			set
			{
				if ((this._MembershipID != value))
				{
					if (this._Profile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMembershipIDChanging(value);
					this.SendPropertyChanging();
					this._MembershipID = value;
					this.SendPropertyChanged("MembershipID");
					this.OnMembershipIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessLevel", DbType="TinyInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public byte AccessLevel
		{
			get
			{
				return this._AccessLevel;
			}
			set
			{
				if ((this._AccessLevel != value))
				{
					this.OnAccessLevelChanging(value);
					this.SendPropertyChanging();
					this._AccessLevel = value;
					this.SendPropertyChanged("AccessLevel");
					this.OnAccessLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_SiteMember", Storage="_Profile", ThisKey="MembershipID", OtherKey="MembershipID", IsForeignKey=true)]
		public Profile Profile
		{
			get
			{
				return this._Profile.Entity;
			}
			set
			{
				Profile previousValue = this._Profile.Entity;
				if (((previousValue != value) 
							|| (this._Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profile.Entity = null;
						previousValue.SiteMembers.Remove(this);
					}
					this._Profile.Entity = value;
					if ((value != null))
					{
						value.SiteMembers.Add(this);
						this._MembershipID = value.MembershipID;
					}
					else
					{
						this._MembershipID = default(System.Guid);
					}
					this.SendPropertyChanged("Profile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_SiteMember", Storage="_Site", ThisKey="SiteID", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.SiteMembers.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.SiteMembers.Add(this);
						this._SiteID = value.SiteID;
					}
					else
					{
						this._SiteID = default(System.Guid);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Profile = default(EntityRef<Profile>);
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sites")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Site : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SiteID;
		
		private string _Title;
		
		private string _ShortName;
		
		private string _Description;
		
		private string _Password;
		
		private EntitySet<Course> _Courses;
		
		private EntitySet<CourseTerm> _CourseTerms;
		
		private EntitySet<ProgramOutcome> _ProgramOutcomes;
		
		private EntitySet<Invitation> _Invitations;
		
		private EntitySet<SiteMember> _SiteMembers;
		
		private EntitySet<Term> _Terms;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteIDChanging(System.Guid value);
    partial void OnSiteIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public Site()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Course", Storage="_Courses", ThisKey="SiteID", OtherKey="SiteID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<Course> Courses
		{
			get
			{
				if ((this.serializing 
							&& (this._Courses.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Courses;
			}
			set
			{
				this._Courses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_CourseTerm", Storage="_CourseTerms", ThisKey="SiteID", OtherKey="SiteID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<CourseTerm> CourseTerms
		{
			get
			{
				if ((this.serializing 
							&& (this._CourseTerms.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CourseTerms;
			}
			set
			{
				this._CourseTerms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_ProgramOutcome", Storage="_ProgramOutcomes", ThisKey="SiteID", OtherKey="SiteID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<ProgramOutcome> ProgramOutcomes
		{
			get
			{
				if ((this.serializing 
							&& (this._ProgramOutcomes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ProgramOutcomes;
			}
			set
			{
				this._ProgramOutcomes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Invitation", Storage="_Invitations", ThisKey="SiteID", OtherKey="SiteID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<Invitation> Invitations
		{
			get
			{
				if ((this.serializing 
							&& (this._Invitations.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Invitations;
			}
			set
			{
				this._Invitations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_SiteMember", Storage="_SiteMembers", ThisKey="SiteID", OtherKey="SiteID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<SiteMember> SiteMembers
		{
			get
			{
				if ((this.serializing 
							&& (this._SiteMembers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SiteMembers;
			}
			set
			{
				this._SiteMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Term", Storage="_Terms", ThisKey="SiteID", OtherKey="SiteID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<Term> Terms
		{
			get
			{
				if ((this.serializing 
							&& (this._Terms.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Terms;
			}
			set
			{
				this._Terms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Courses(Course entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_Courses(Course entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_CourseTerms(CourseTerm entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_CourseTerms(CourseTerm entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_ProgramOutcomes(ProgramOutcome entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_ProgramOutcomes(ProgramOutcome entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_Invitations(Invitation entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_Invitations(Invitation entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_SiteMembers(SiteMember entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_SiteMembers(SiteMember entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void attach_Terms(Term entity)
		{
			this.SendPropertyChanging();
			entity.Site = this;
		}
		
		private void detach_Terms(Term entity)
		{
			this.SendPropertyChanging();
			entity.Site = null;
		}
		
		private void Initialize()
		{
			this._Courses = new EntitySet<Course>(new Action<Course>(this.attach_Courses), new Action<Course>(this.detach_Courses));
			this._CourseTerms = new EntitySet<CourseTerm>(new Action<CourseTerm>(this.attach_CourseTerms), new Action<CourseTerm>(this.detach_CourseTerms));
			this._ProgramOutcomes = new EntitySet<ProgramOutcome>(new Action<ProgramOutcome>(this.attach_ProgramOutcomes), new Action<ProgramOutcome>(this.detach_ProgramOutcomes));
			this._Invitations = new EntitySet<Invitation>(new Action<Invitation>(this.attach_Invitations), new Action<Invitation>(this.detach_Invitations));
			this._SiteMembers = new EntitySet<SiteMember>(new Action<SiteMember>(this.attach_SiteMembers), new Action<SiteMember>(this.detach_SiteMembers));
			this._Terms = new EntitySet<Term>(new Action<Term>(this.attach_Terms), new Action<Term>(this.detach_Terms));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubmissionExceptions")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SubmissionException : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SubmissionExceptionID;
		
		private System.Guid _AssessmentID;
		
		private System.Guid _StudentID;
		
		private System.DateTime _DueDate;
		
		private System.Guid _CourseTermID;
		
		private EntityRef<CourseTerm> _CourseTerm;
		
		private EntityRef<Profile> _Profile;
		
		private EntityRef<Assessment> _Assessment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubmissionExceptionIDChanging(System.Guid value);
    partial void OnSubmissionExceptionIDChanged();
    partial void OnAssessmentIDChanging(System.Guid value);
    partial void OnAssessmentIDChanged();
    partial void OnStudentIDChanging(System.Guid value);
    partial void OnStudentIDChanged();
    partial void OnDueDateChanging(System.DateTime value);
    partial void OnDueDateChanged();
    partial void OnCourseTermIDChanging(System.Guid value);
    partial void OnCourseTermIDChanged();
    #endregion
		
		public SubmissionException()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmissionExceptionID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid SubmissionExceptionID
		{
			get
			{
				return this._SubmissionExceptionID;
			}
			set
			{
				if ((this._SubmissionExceptionID != value))
				{
					this.OnSubmissionExceptionIDChanging(value);
					this.SendPropertyChanging();
					this._SubmissionExceptionID = value;
					this.SendPropertyChanged("SubmissionExceptionID");
					this.OnSubmissionExceptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssessmentID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid AssessmentID
		{
			get
			{
				return this._AssessmentID;
			}
			set
			{
				if ((this._AssessmentID != value))
				{
					if (this._Assessment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssessmentIDChanging(value);
					this.SendPropertyChanging();
					this._AssessmentID = value;
					this.SendPropertyChanged("AssessmentID");
					this.OnAssessmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					if (this._Profile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseTermID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Guid CourseTermID
		{
			get
			{
				return this._CourseTermID;
			}
			set
			{
				if ((this._CourseTermID != value))
				{
					if (this._CourseTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseTermIDChanging(value);
					this.SendPropertyChanging();
					this._CourseTermID = value;
					this.SendPropertyChanged("CourseTermID");
					this.OnCourseTermIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseTerm_SubmissionException", Storage="_CourseTerm", ThisKey="CourseTermID", OtherKey="CourseTermID", IsForeignKey=true)]
		public CourseTerm CourseTerm
		{
			get
			{
				return this._CourseTerm.Entity;
			}
			set
			{
				CourseTerm previousValue = this._CourseTerm.Entity;
				if (((previousValue != value) 
							|| (this._CourseTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CourseTerm.Entity = null;
						previousValue.SubmissionExceptions.Remove(this);
					}
					this._CourseTerm.Entity = value;
					if ((value != null))
					{
						value.SubmissionExceptions.Add(this);
						this._CourseTermID = value.CourseTermID;
					}
					else
					{
						this._CourseTermID = default(System.Guid);
					}
					this.SendPropertyChanged("CourseTerm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_SubmissionException", Storage="_Profile", ThisKey="StudentID", OtherKey="MembershipID", IsForeignKey=true)]
		public Profile Profile
		{
			get
			{
				return this._Profile.Entity;
			}
			set
			{
				Profile previousValue = this._Profile.Entity;
				if (((previousValue != value) 
							|| (this._Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profile.Entity = null;
						previousValue.SubmissionExceptions.Remove(this);
					}
					this._Profile.Entity = value;
					if ((value != null))
					{
						value.SubmissionExceptions.Add(this);
						this._StudentID = value.MembershipID;
					}
					else
					{
						this._StudentID = default(System.Guid);
					}
					this.SendPropertyChanged("Profile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Assessment_SubmissionException", Storage="_Assessment", ThisKey="AssessmentID", OtherKey="AssessmentID", IsForeignKey=true)]
		public Assessment Assessment
		{
			get
			{
				return this._Assessment.Entity;
			}
			set
			{
				Assessment previousValue = this._Assessment.Entity;
				if (((previousValue != value) 
							|| (this._Assessment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Assessment.Entity = null;
						previousValue.SubmissionExceptions.Remove(this);
					}
					this._Assessment.Entity = value;
					if ((value != null))
					{
						value.SubmissionExceptions.Add(this);
						this._AssessmentID = value.AssessmentID;
					}
					else
					{
						this._AssessmentID = default(System.Guid);
					}
					this.SendPropertyChanged("Assessment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CourseTerm = default(EntityRef<CourseTerm>);
			this._Profile = default(EntityRef<Profile>);
			this._Assessment = default(EntityRef<Assessment>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubmissionRecords")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SubmissionRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SubmissionRecordID;
		
		private System.Guid _StudentID;
		
		private System.Guid _AssessmentID;
		
		private System.DateTime _SubmissionDate;
		
		private System.Nullable<System.DateTime> _GradedOn;
		
		private System.Nullable<System.Guid> _GradedBy;
		
		private string _Comments;
		
		private EntitySet<Response> _Responses;
		
		private EntityRef<Profile> _Profile;
		
		private EntityRef<Assessment> _Assessment;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubmissionRecordIDChanging(System.Guid value);
    partial void OnSubmissionRecordIDChanged();
    partial void OnStudentIDChanging(System.Guid value);
    partial void OnStudentIDChanged();
    partial void OnAssessmentIDChanging(System.Guid value);
    partial void OnAssessmentIDChanged();
    partial void OnSubmissionDateChanging(System.DateTime value);
    partial void OnSubmissionDateChanged();
    partial void OnGradedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnGradedOnChanged();
    partial void OnGradedByChanging(System.Nullable<System.Guid> value);
    partial void OnGradedByChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    #endregion
		
		public SubmissionRecord()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmissionRecordID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid SubmissionRecordID
		{
			get
			{
				return this._SubmissionRecordID;
			}
			set
			{
				if ((this._SubmissionRecordID != value))
				{
					this.OnSubmissionRecordIDChanging(value);
					this.SendPropertyChanging();
					this._SubmissionRecordID = value;
					this.SendPropertyChanged("SubmissionRecordID");
					this.OnSubmissionRecordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					if (this._Profile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssessmentID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid AssessmentID
		{
			get
			{
				return this._AssessmentID;
			}
			set
			{
				if ((this._AssessmentID != value))
				{
					if (this._Assessment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssessmentIDChanging(value);
					this.SendPropertyChanging();
					this._AssessmentID = value;
					this.SendPropertyChanged("AssessmentID");
					this.OnAssessmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmissionDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime SubmissionDate
		{
			get
			{
				return this._SubmissionDate;
			}
			set
			{
				if ((this._SubmissionDate != value))
				{
					this.OnSubmissionDateChanging(value);
					this.SendPropertyChanging();
					this._SubmissionDate = value;
					this.SendPropertyChanged("SubmissionDate");
					this.OnSubmissionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradedOn", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> GradedOn
		{
			get
			{
				return this._GradedOn;
			}
			set
			{
				if ((this._GradedOn != value))
				{
					this.OnGradedOnChanging(value);
					this.SendPropertyChanging();
					this._GradedOn = value;
					this.SendPropertyChanged("GradedOn");
					this.OnGradedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradedBy", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.Guid> GradedBy
		{
			get
			{
				return this._GradedBy;
			}
			set
			{
				if ((this._GradedBy != value))
				{
					this.OnGradedByChanging(value);
					this.SendPropertyChanging();
					this._GradedBy = value;
					this.SendPropertyChanged("GradedBy");
					this.OnGradedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubmissionRecord_Response", Storage="_Responses", ThisKey="SubmissionRecordID", OtherKey="SubmissionRecordID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<Response> Responses
		{
			get
			{
				if ((this.serializing 
							&& (this._Responses.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Responses;
			}
			set
			{
				this._Responses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_SubmissionRecord", Storage="_Profile", ThisKey="StudentID", OtherKey="MembershipID", IsForeignKey=true)]
		public Profile Profile
		{
			get
			{
				return this._Profile.Entity;
			}
			set
			{
				Profile previousValue = this._Profile.Entity;
				if (((previousValue != value) 
							|| (this._Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profile.Entity = null;
						previousValue.SubmissionRecords.Remove(this);
					}
					this._Profile.Entity = value;
					if ((value != null))
					{
						value.SubmissionRecords.Add(this);
						this._StudentID = value.MembershipID;
					}
					else
					{
						this._StudentID = default(System.Guid);
					}
					this.SendPropertyChanged("Profile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Assessment_SubmissionRecord", Storage="_Assessment", ThisKey="AssessmentID", OtherKey="AssessmentID", IsForeignKey=true)]
		public Assessment Assessment
		{
			get
			{
				return this._Assessment.Entity;
			}
			set
			{
				Assessment previousValue = this._Assessment.Entity;
				if (((previousValue != value) 
							|| (this._Assessment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Assessment.Entity = null;
						previousValue.SubmissionRecords.Remove(this);
					}
					this._Assessment.Entity = value;
					if ((value != null))
					{
						value.SubmissionRecords.Add(this);
						this._AssessmentID = value.AssessmentID;
					}
					else
					{
						this._AssessmentID = default(System.Guid);
					}
					this.SendPropertyChanged("Assessment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Responses(Response entity)
		{
			this.SendPropertyChanging();
			entity.SubmissionRecord = this;
		}
		
		private void detach_Responses(Response entity)
		{
			this.SendPropertyChanging();
			entity.SubmissionRecord = null;
		}
		
		private void Initialize()
		{
			this._Responses = new EntitySet<Response>(new Action<Response>(this.attach_Responses), new Action<Response>(this.detach_Responses));
			this._Profile = default(EntityRef<Profile>);
			this._Assessment = default(EntityRef<Assessment>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TagProgramOutcomes")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class TagProgramOutcome : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _TagProgramOutcomeID;
		
		private System.Guid _TagID;
		
		private System.Guid _ProgramOutcomeID;
		
		private EntityRef<ProgramOutcome> _ProgramOutcome;
		
		private EntityRef<Tag> _Tag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTagProgramOutcomeIDChanging(System.Guid value);
    partial void OnTagProgramOutcomeIDChanged();
    partial void OnTagIDChanging(System.Guid value);
    partial void OnTagIDChanged();
    partial void OnProgramOutcomeIDChanging(System.Guid value);
    partial void OnProgramOutcomeIDChanged();
    #endregion
		
		public TagProgramOutcome()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagProgramOutcomeID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid TagProgramOutcomeID
		{
			get
			{
				return this._TagProgramOutcomeID;
			}
			set
			{
				if ((this._TagProgramOutcomeID != value))
				{
					this.OnTagProgramOutcomeIDChanging(value);
					this.SendPropertyChanging();
					this._TagProgramOutcomeID = value;
					this.SendPropertyChanged("TagProgramOutcomeID");
					this.OnTagProgramOutcomeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid TagID
		{
			get
			{
				return this._TagID;
			}
			set
			{
				if ((this._TagID != value))
				{
					if (this._Tag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTagIDChanging(value);
					this.SendPropertyChanging();
					this._TagID = value;
					this.SendPropertyChanged("TagID");
					this.OnTagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramOutcomeID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid ProgramOutcomeID
		{
			get
			{
				return this._ProgramOutcomeID;
			}
			set
			{
				if ((this._ProgramOutcomeID != value))
				{
					if (this._ProgramOutcome.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProgramOutcomeIDChanging(value);
					this.SendPropertyChanging();
					this._ProgramOutcomeID = value;
					this.SendPropertyChanged("ProgramOutcomeID");
					this.OnProgramOutcomeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramOutcome_TagProgramOutcome", Storage="_ProgramOutcome", ThisKey="ProgramOutcomeID", OtherKey="ProgramOutcomeID", IsForeignKey=true)]
		public ProgramOutcome ProgramOutcome
		{
			get
			{
				return this._ProgramOutcome.Entity;
			}
			set
			{
				ProgramOutcome previousValue = this._ProgramOutcome.Entity;
				if (((previousValue != value) 
							|| (this._ProgramOutcome.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramOutcome.Entity = null;
						previousValue.TagProgramOutcomes.Remove(this);
					}
					this._ProgramOutcome.Entity = value;
					if ((value != null))
					{
						value.TagProgramOutcomes.Add(this);
						this._ProgramOutcomeID = value.ProgramOutcomeID;
					}
					else
					{
						this._ProgramOutcomeID = default(System.Guid);
					}
					this.SendPropertyChanged("ProgramOutcome");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_TagProgramOutcome", Storage="_Tag", ThisKey="TagID", OtherKey="TagID", IsForeignKey=true)]
		public Tag Tag
		{
			get
			{
				return this._Tag.Entity;
			}
			set
			{
				Tag previousValue = this._Tag.Entity;
				if (((previousValue != value) 
							|| (this._Tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tag.Entity = null;
						previousValue.TagProgramOutcomes.Remove(this);
					}
					this._Tag.Entity = value;
					if ((value != null))
					{
						value.TagProgramOutcomes.Add(this);
						this._TagID = value.TagID;
					}
					else
					{
						this._TagID = default(System.Guid);
					}
					this.SendPropertyChanged("Tag");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._ProgramOutcome = default(EntityRef<ProgramOutcome>);
			this._Tag = default(EntityRef<Tag>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tags")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _TagID;
		
		private string _Name;
		
		private string _Description;
		
		private System.Guid _CreatedBy;
		
		private System.Guid _CourseTermID;
		
		private string _DescriptiveName;
		
		private bool _IsCourseOutcome;
		
		private string _Tutorial;
		
		private EntitySet<TagProgramOutcome> _TagProgramOutcomes;
		
		private EntityRef<CourseTerm> _CourseTerm;
		
		private EntityRef<Profile> _Profile;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTagIDChanging(System.Guid value);
    partial void OnTagIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedByChanging(System.Guid value);
    partial void OnCreatedByChanged();
    partial void OnCourseTermIDChanging(System.Guid value);
    partial void OnCourseTermIDChanged();
    partial void OnDescriptiveNameChanging(string value);
    partial void OnDescriptiveNameChanged();
    partial void OnIsCourseOutcomeChanging(bool value);
    partial void OnIsCourseOutcomeChanged();
    partial void OnTutorialChanging(string value);
    partial void OnTutorialChanged();
    #endregion
		
		public Tag()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid TagID
		{
			get
			{
				return this._TagID;
			}
			set
			{
				if ((this._TagID != value))
				{
					this.OnTagIDChanging(value);
					this.SendPropertyChanging();
					this._TagID = value;
					this.SendPropertyChanged("TagID");
					this.OnTagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(300)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Guid CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._Profile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseTermID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Guid CourseTermID
		{
			get
			{
				return this._CourseTermID;
			}
			set
			{
				if ((this._CourseTermID != value))
				{
					if (this._CourseTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseTermIDChanging(value);
					this.SendPropertyChanging();
					this._CourseTermID = value;
					this.SendPropertyChanged("CourseTermID");
					this.OnCourseTermIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptiveName", DbType="VarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string DescriptiveName
		{
			get
			{
				return this._DescriptiveName;
			}
			set
			{
				if ((this._DescriptiveName != value))
				{
					this.OnDescriptiveNameChanging(value);
					this.SendPropertyChanging();
					this._DescriptiveName = value;
					this.SendPropertyChanged("DescriptiveName");
					this.OnDescriptiveNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCourseOutcome", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public bool IsCourseOutcome
		{
			get
			{
				return this._IsCourseOutcome;
			}
			set
			{
				if ((this._IsCourseOutcome != value))
				{
					this.OnIsCourseOutcomeChanging(value);
					this.SendPropertyChanging();
					this._IsCourseOutcome = value;
					this.SendPropertyChanged("IsCourseOutcome");
					this.OnIsCourseOutcomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tutorial", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Tutorial
		{
			get
			{
				return this._Tutorial;
			}
			set
			{
				if ((this._Tutorial != value))
				{
					this.OnTutorialChanging(value);
					this.SendPropertyChanging();
					this._Tutorial = value;
					this.SendPropertyChanged("Tutorial");
					this.OnTutorialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_TagProgramOutcome", Storage="_TagProgramOutcomes", ThisKey="TagID", OtherKey="TagID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<TagProgramOutcome> TagProgramOutcomes
		{
			get
			{
				if ((this.serializing 
							&& (this._TagProgramOutcomes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TagProgramOutcomes;
			}
			set
			{
				this._TagProgramOutcomes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseTerm_Tag", Storage="_CourseTerm", ThisKey="CourseTermID", OtherKey="CourseTermID", IsForeignKey=true)]
		public CourseTerm CourseTerm
		{
			get
			{
				return this._CourseTerm.Entity;
			}
			set
			{
				CourseTerm previousValue = this._CourseTerm.Entity;
				if (((previousValue != value) 
							|| (this._CourseTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CourseTerm.Entity = null;
						previousValue.Tags.Remove(this);
					}
					this._CourseTerm.Entity = value;
					if ((value != null))
					{
						value.Tags.Add(this);
						this._CourseTermID = value.CourseTermID;
					}
					else
					{
						this._CourseTermID = default(System.Guid);
					}
					this.SendPropertyChanged("CourseTerm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_Tag", Storage="_Profile", ThisKey="CreatedBy", OtherKey="MembershipID", IsForeignKey=true)]
		public Profile Profile
		{
			get
			{
				return this._Profile.Entity;
			}
			set
			{
				Profile previousValue = this._Profile.Entity;
				if (((previousValue != value) 
							|| (this._Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profile.Entity = null;
						previousValue.Tags.Remove(this);
					}
					this._Profile.Entity = value;
					if ((value != null))
					{
						value.Tags.Add(this);
						this._CreatedBy = value.MembershipID;
					}
					else
					{
						this._CreatedBy = default(System.Guid);
					}
					this.SendPropertyChanged("Profile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TagProgramOutcomes(TagProgramOutcome entity)
		{
			this.SendPropertyChanging();
			entity.Tag = this;
		}
		
		private void detach_TagProgramOutcomes(TagProgramOutcome entity)
		{
			this.SendPropertyChanging();
			entity.Tag = null;
		}
		
		private void Initialize()
		{
			this._TagProgramOutcomes = new EntitySet<TagProgramOutcome>(new Action<TagProgramOutcome>(this.attach_TagProgramOutcomes), new Action<TagProgramOutcome>(this.detach_TagProgramOutcomes));
			this._CourseTerm = default(EntityRef<CourseTerm>);
			this._Profile = default(EntityRef<Profile>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Terms")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Term : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _TermID;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private string _Name;
		
		private System.Guid _SiteID;
		
		private EntitySet<CourseTerm> _CourseTerms;
		
		private EntityRef<Site> _Site;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTermIDChanging(System.Guid value);
    partial void OnTermIDChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSiteIDChanging(System.Guid value);
    partial void OnSiteIDChanged();
    #endregion
		
		public Term()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid TermID
		{
			get
			{
				return this._TermID;
			}
			set
			{
				if ((this._TermID != value))
				{
					this.OnTermIDChanging(value);
					this.SendPropertyChanging();
					this._TermID = value;
					this.SendPropertyChanged("TermID");
					this.OnTermIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Guid SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._Site.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Term_CourseTerm", Storage="_CourseTerms", ThisKey="TermID", OtherKey="TermID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<CourseTerm> CourseTerms
		{
			get
			{
				if ((this.serializing 
							&& (this._CourseTerms.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CourseTerms;
			}
			set
			{
				this._CourseTerms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Site_Term", Storage="_Site", ThisKey="SiteID", OtherKey="SiteID", IsForeignKey=true)]
		public Site Site
		{
			get
			{
				return this._Site.Entity;
			}
			set
			{
				Site previousValue = this._Site.Entity;
				if (((previousValue != value) 
							|| (this._Site.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Site.Entity = null;
						previousValue.Terms.Remove(this);
					}
					this._Site.Entity = value;
					if ((value != null))
					{
						value.Terms.Add(this);
						this._SiteID = value.SiteID;
					}
					else
					{
						this._SiteID = default(System.Guid);
					}
					this.SendPropertyChanged("Site");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CourseTerms(CourseTerm entity)
		{
			this.SendPropertyChanging();
			entity.Term = this;
		}
		
		private void detach_CourseTerms(CourseTerm entity)
		{
			this.SendPropertyChanging();
			entity.Term = null;
		}
		
		private void Initialize()
		{
			this._CourseTerms = new EntitySet<CourseTerm>(new Action<CourseTerm>(this.attach_CourseTerms), new Action<CourseTerm>(this.detach_CourseTerms));
			this._Site = default(EntityRef<Site>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CourseTermMembers")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CourseTermMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CourseTermMemberID;
		
		private System.Guid _CourseTermID;
		
		private System.Guid _MembershipID;
		
		private byte _AccessLevel;
		
		private string _AccessCode;
		
		private System.Nullable<int> _Section;
		
		private EntityRef<CourseTerm> _CourseTerm;
		
		private EntityRef<Profile> _Profile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourseTermMemberIDChanging(System.Guid value);
    partial void OnCourseTermMemberIDChanged();
    partial void OnCourseTermIDChanging(System.Guid value);
    partial void OnCourseTermIDChanged();
    partial void OnMembershipIDChanging(System.Guid value);
    partial void OnMembershipIDChanged();
    partial void OnAccessLevelChanging(byte value);
    partial void OnAccessLevelChanged();
    partial void OnAccessCodeChanging(string value);
    partial void OnAccessCodeChanged();
    partial void OnSectionChanging(System.Nullable<int> value);
    partial void OnSectionChanged();
    #endregion
		
		public CourseTermMember()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseTermMemberID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid CourseTermMemberID
		{
			get
			{
				return this._CourseTermMemberID;
			}
			set
			{
				if ((this._CourseTermMemberID != value))
				{
					this.OnCourseTermMemberIDChanging(value);
					this.SendPropertyChanging();
					this._CourseTermMemberID = value;
					this.SendPropertyChanged("CourseTermMemberID");
					this.OnCourseTermMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseTermID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid CourseTermID
		{
			get
			{
				return this._CourseTermID;
			}
			set
			{
				if ((this._CourseTermID != value))
				{
					if (this._CourseTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseTermIDChanging(value);
					this.SendPropertyChanging();
					this._CourseTermID = value;
					this.SendPropertyChanged("CourseTermID");
					this.OnCourseTermIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MembershipID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid MembershipID
		{
			get
			{
				return this._MembershipID;
			}
			set
			{
				if ((this._MembershipID != value))
				{
					if (this._Profile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMembershipIDChanging(value);
					this.SendPropertyChanging();
					this._MembershipID = value;
					this.SendPropertyChanged("MembershipID");
					this.OnMembershipIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessLevel", DbType="TinyInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public byte AccessLevel
		{
			get
			{
				return this._AccessLevel;
			}
			set
			{
				if ((this._AccessLevel != value))
				{
					this.OnAccessLevelChanging(value);
					this.SendPropertyChanging();
					this._AccessLevel = value;
					this.SendPropertyChanged("AccessLevel");
					this.OnAccessLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessCode", DbType="VarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string AccessCode
		{
			get
			{
				return this._AccessCode;
			}
			set
			{
				if ((this._AccessCode != value))
				{
					this.OnAccessCodeChanging(value);
					this.SendPropertyChanging();
					this._AccessCode = value;
					this.SendPropertyChanged("AccessCode");
					this.OnAccessCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Section", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> Section
		{
			get
			{
				return this._Section;
			}
			set
			{
				if ((this._Section != value))
				{
					this.OnSectionChanging(value);
					this.SendPropertyChanging();
					this._Section = value;
					this.SendPropertyChanged("Section");
					this.OnSectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseTerm_CourseTermMember", Storage="_CourseTerm", ThisKey="CourseTermID", OtherKey="CourseTermID", IsForeignKey=true)]
		public CourseTerm CourseTerm
		{
			get
			{
				return this._CourseTerm.Entity;
			}
			set
			{
				CourseTerm previousValue = this._CourseTerm.Entity;
				if (((previousValue != value) 
							|| (this._CourseTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CourseTerm.Entity = null;
						previousValue.CourseTermMembers.Remove(this);
					}
					this._CourseTerm.Entity = value;
					if ((value != null))
					{
						value.CourseTermMembers.Add(this);
						this._CourseTermID = value.CourseTermID;
					}
					else
					{
						this._CourseTermID = default(System.Guid);
					}
					this.SendPropertyChanged("CourseTerm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_CourseTermMember", Storage="_Profile", ThisKey="MembershipID", OtherKey="MembershipID", IsForeignKey=true)]
		public Profile Profile
		{
			get
			{
				return this._Profile.Entity;
			}
			set
			{
				Profile previousValue = this._Profile.Entity;
				if (((previousValue != value) 
							|| (this._Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profile.Entity = null;
						previousValue.CourseTermMembers.Remove(this);
					}
					this._Profile.Entity = value;
					if ((value != null))
					{
						value.CourseTermMembers.Add(this);
						this._MembershipID = value.MembershipID;
					}
					else
					{
						this._MembershipID = default(System.Guid);
					}
					this.SendPropertyChanged("Profile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CourseTerm = default(EntityRef<CourseTerm>);
			this._Profile = default(EntityRef<Profile>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Assessments")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Assessment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AssessmentID;
		
		private string _Name;
		
		private System.DateTime _DueDate;
		
		private bool _IsExtraCredit;
		
		private System.Guid _AssessmentTypeID;
		
		private string _Data;
		
		private System.DateTime _CreatedDate;
		
		private bool _IsVisible;
		
		private bool _IsOpen;
		
		private bool _IsGradable;
		
		private bool _AllowMultipleSubmissions;
		
		private System.Guid _CourseTermID;
		
		private System.Nullable<int> _Section;
		
		private System.Nullable<System.Guid> _PrereqAssessmentID;
		
		private System.Nullable<double> _PrereqMinScorePct;
		
		private EntitySet<Answer> _Answers;
		
		private EntitySet<Question> _Questions;
		
		private EntitySet<SubmissionException> _SubmissionExceptions;
		
		private EntitySet<SubmissionRecord> _SubmissionRecords;
		
		private EntitySet<Assessment> _Assessments;
		
		private EntityRef<Assessment> _PreReq;
		
		private EntityRef<AssessmentType> _AssessmentType;
		
		private EntityRef<CourseTerm> _CourseTerm;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAssessmentIDChanging(System.Guid value);
    partial void OnAssessmentIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDueDateChanging(System.DateTime value);
    partial void OnDueDateChanged();
    partial void OnIsExtraCreditChanging(bool value);
    partial void OnIsExtraCreditChanged();
    partial void OnAssessmentTypeIDChanging(System.Guid value);
    partial void OnAssessmentTypeIDChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnIsVisibleChanging(bool value);
    partial void OnIsVisibleChanged();
    partial void OnIsOpenChanging(bool value);
    partial void OnIsOpenChanged();
    partial void OnIsGradableChanging(bool value);
    partial void OnIsGradableChanged();
    partial void OnAllowMultipleSubmissionsChanging(bool value);
    partial void OnAllowMultipleSubmissionsChanged();
    partial void OnCourseTermIDChanging(System.Guid value);
    partial void OnCourseTermIDChanged();
    partial void OnSectionChanging(System.Nullable<int> value);
    partial void OnSectionChanged();
    partial void OnPrereqAssessmentIDChanging(System.Nullable<System.Guid> value);
    partial void OnPrereqAssessmentIDChanged();
    partial void OnPrereqMinScorePctChanging(System.Nullable<double> value);
    partial void OnPrereqMinScorePctChanged();
    #endregion
		
		public Assessment()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssessmentID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid AssessmentID
		{
			get
			{
				return this._AssessmentID;
			}
			set
			{
				if ((this._AssessmentID != value))
				{
					this.OnAssessmentIDChanging(value);
					this.SendPropertyChanging();
					this._AssessmentID = value;
					this.SendPropertyChanged("AssessmentID");
					this.OnAssessmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExtraCredit", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsExtraCredit
		{
			get
			{
				return this._IsExtraCredit;
			}
			set
			{
				if ((this._IsExtraCredit != value))
				{
					this.OnIsExtraCreditChanging(value);
					this.SendPropertyChanging();
					this._IsExtraCredit = value;
					this.SendPropertyChanged("IsExtraCredit");
					this.OnIsExtraCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssessmentTypeID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Guid AssessmentTypeID
		{
			get
			{
				return this._AssessmentTypeID;
			}
			set
			{
				if ((this._AssessmentTypeID != value))
				{
					if (this._AssessmentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssessmentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._AssessmentTypeID = value;
					this.SendPropertyChanged("AssessmentTypeID");
					this.OnAssessmentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOpen", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool IsOpen
		{
			get
			{
				return this._IsOpen;
			}
			set
			{
				if ((this._IsOpen != value))
				{
					this.OnIsOpenChanging(value);
					this.SendPropertyChanging();
					this._IsOpen = value;
					this.SendPropertyChanged("IsOpen");
					this.OnIsOpenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGradable", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool IsGradable
		{
			get
			{
				return this._IsGradable;
			}
			set
			{
				if ((this._IsGradable != value))
				{
					this.OnIsGradableChanging(value);
					this.SendPropertyChanging();
					this._IsGradable = value;
					this.SendPropertyChanged("IsGradable");
					this.OnIsGradableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowMultipleSubmissions", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool AllowMultipleSubmissions
		{
			get
			{
				return this._AllowMultipleSubmissions;
			}
			set
			{
				if ((this._AllowMultipleSubmissions != value))
				{
					this.OnAllowMultipleSubmissionsChanging(value);
					this.SendPropertyChanging();
					this._AllowMultipleSubmissions = value;
					this.SendPropertyChanged("AllowMultipleSubmissions");
					this.OnAllowMultipleSubmissionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseTermID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Guid CourseTermID
		{
			get
			{
				return this._CourseTermID;
			}
			set
			{
				if ((this._CourseTermID != value))
				{
					if (this._CourseTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseTermIDChanging(value);
					this.SendPropertyChanging();
					this._CourseTermID = value;
					this.SendPropertyChanged("CourseTermID");
					this.OnCourseTermIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Section", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<int> Section
		{
			get
			{
				return this._Section;
			}
			set
			{
				if ((this._Section != value))
				{
					this.OnSectionChanging(value);
					this.SendPropertyChanging();
					this._Section = value;
					this.SendPropertyChanged("Section");
					this.OnSectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrereqAssessmentID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<System.Guid> PrereqAssessmentID
		{
			get
			{
				return this._PrereqAssessmentID;
			}
			set
			{
				if ((this._PrereqAssessmentID != value))
				{
					if (this._PreReq.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrereqAssessmentIDChanging(value);
					this.SendPropertyChanging();
					this._PrereqAssessmentID = value;
					this.SendPropertyChanged("PrereqAssessmentID");
					this.OnPrereqAssessmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrereqMinScorePct", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<double> PrereqMinScorePct
		{
			get
			{
				return this._PrereqMinScorePct;
			}
			set
			{
				if ((this._PrereqMinScorePct != value))
				{
					this.OnPrereqMinScorePctChanging(value);
					this.SendPropertyChanging();
					this._PrereqMinScorePct = value;
					this.SendPropertyChanged("PrereqMinScorePct");
					this.OnPrereqMinScorePctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Assessment_Answer", Storage="_Answers", ThisKey="AssessmentID", OtherKey="AssessmentID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<Answer> Answers
		{
			get
			{
				if ((this.serializing 
							&& (this._Answers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Answers;
			}
			set
			{
				this._Answers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Assessment_Question", Storage="_Questions", ThisKey="AssessmentID", OtherKey="AssessmentID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<Question> Questions
		{
			get
			{
				if ((this.serializing 
							&& (this._Questions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Questions;
			}
			set
			{
				this._Questions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Assessment_SubmissionException", Storage="_SubmissionExceptions", ThisKey="AssessmentID", OtherKey="AssessmentID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<SubmissionException> SubmissionExceptions
		{
			get
			{
				if ((this.serializing 
							&& (this._SubmissionExceptions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SubmissionExceptions;
			}
			set
			{
				this._SubmissionExceptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Assessment_SubmissionRecord", Storage="_SubmissionRecords", ThisKey="AssessmentID", OtherKey="AssessmentID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<SubmissionRecord> SubmissionRecords
		{
			get
			{
				if ((this.serializing 
							&& (this._SubmissionRecords.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SubmissionRecords;
			}
			set
			{
				this._SubmissionRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Assessment_Assessment", Storage="_Assessments", ThisKey="AssessmentID", OtherKey="PrereqAssessmentID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<Assessment> Assessments
		{
			get
			{
				if ((this.serializing 
							&& (this._Assessments.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Assessments;
			}
			set
			{
				this._Assessments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Assessment_Assessment", Storage="_PreReq", ThisKey="PrereqAssessmentID", OtherKey="AssessmentID", IsForeignKey=true)]
		public Assessment PreReq
		{
			get
			{
				return this._PreReq.Entity;
			}
			set
			{
				Assessment previousValue = this._PreReq.Entity;
				if (((previousValue != value) 
							|| (this._PreReq.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PreReq.Entity = null;
						previousValue.Assessments.Remove(this);
					}
					this._PreReq.Entity = value;
					if ((value != null))
					{
						value.Assessments.Add(this);
						this._PrereqAssessmentID = value.AssessmentID;
					}
					else
					{
						this._PrereqAssessmentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("PreReq");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssessmentType_Assessment", Storage="_AssessmentType", ThisKey="AssessmentTypeID", OtherKey="AssessmentTypeID", IsForeignKey=true)]
		public AssessmentType AssessmentType
		{
			get
			{
				return this._AssessmentType.Entity;
			}
			set
			{
				AssessmentType previousValue = this._AssessmentType.Entity;
				if (((previousValue != value) 
							|| (this._AssessmentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AssessmentType.Entity = null;
						previousValue.Assessments.Remove(this);
					}
					this._AssessmentType.Entity = value;
					if ((value != null))
					{
						value.Assessments.Add(this);
						this._AssessmentTypeID = value.AssessmentTypeID;
					}
					else
					{
						this._AssessmentTypeID = default(System.Guid);
					}
					this.SendPropertyChanged("AssessmentType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseTerm_Assessment", Storage="_CourseTerm", ThisKey="CourseTermID", OtherKey="CourseTermID", IsForeignKey=true)]
		public CourseTerm CourseTerm
		{
			get
			{
				return this._CourseTerm.Entity;
			}
			set
			{
				CourseTerm previousValue = this._CourseTerm.Entity;
				if (((previousValue != value) 
							|| (this._CourseTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CourseTerm.Entity = null;
						previousValue.Assessments.Remove(this);
					}
					this._CourseTerm.Entity = value;
					if ((value != null))
					{
						value.Assessments.Add(this);
						this._CourseTermID = value.CourseTermID;
					}
					else
					{
						this._CourseTermID = default(System.Guid);
					}
					this.SendPropertyChanged("CourseTerm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Answers(Answer entity)
		{
			this.SendPropertyChanging();
			entity.Assessment = this;
		}
		
		private void detach_Answers(Answer entity)
		{
			this.SendPropertyChanging();
			entity.Assessment = null;
		}
		
		private void attach_Questions(Question entity)
		{
			this.SendPropertyChanging();
			entity.Assessment = this;
		}
		
		private void detach_Questions(Question entity)
		{
			this.SendPropertyChanging();
			entity.Assessment = null;
		}
		
		private void attach_SubmissionExceptions(SubmissionException entity)
		{
			this.SendPropertyChanging();
			entity.Assessment = this;
		}
		
		private void detach_SubmissionExceptions(SubmissionException entity)
		{
			this.SendPropertyChanging();
			entity.Assessment = null;
		}
		
		private void attach_SubmissionRecords(SubmissionRecord entity)
		{
			this.SendPropertyChanging();
			entity.Assessment = this;
		}
		
		private void detach_SubmissionRecords(SubmissionRecord entity)
		{
			this.SendPropertyChanging();
			entity.Assessment = null;
		}
		
		private void attach_Assessments(Assessment entity)
		{
			this.SendPropertyChanging();
			entity.PreReq = this;
		}
		
		private void detach_Assessments(Assessment entity)
		{
			this.SendPropertyChanging();
			entity.PreReq = null;
		}
		
		private void Initialize()
		{
			this._Answers = new EntitySet<Answer>(new Action<Answer>(this.attach_Answers), new Action<Answer>(this.detach_Answers));
			this._Questions = new EntitySet<Question>(new Action<Question>(this.attach_Questions), new Action<Question>(this.detach_Questions));
			this._SubmissionExceptions = new EntitySet<SubmissionException>(new Action<SubmissionException>(this.attach_SubmissionExceptions), new Action<SubmissionException>(this.detach_SubmissionExceptions));
			this._SubmissionRecords = new EntitySet<SubmissionRecord>(new Action<SubmissionRecord>(this.attach_SubmissionRecords), new Action<SubmissionRecord>(this.detach_SubmissionRecords));
			this._Assessments = new EntitySet<Assessment>(new Action<Assessment>(this.attach_Assessments), new Action<Assessment>(this.detach_Assessments));
			this._PreReq = default(EntityRef<Assessment>);
			this._AssessmentType = default(EntityRef<AssessmentType>);
			this._CourseTerm = default(EntityRef<CourseTerm>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
}
#pragma warning restore 1591
